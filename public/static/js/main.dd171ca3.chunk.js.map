{"version":3,"sources":["components/ui/header/Logo6.jpg","components/ui/auth/Plan2.png","api/cookie.js","api/api.js","components/ui/menu-item/MenuItem.js","components/ui/header/search/Search.js","components/ui/header/Header.js","components/ui/profile-header/ProfileAvatar/ProfileAvatar.js","components/ui/profile-header/ProfileHeader.js","components/ui/modal/Modal.js","components/ui/add-board/AddBoard.js","components/ui/modal/fragments/modal-content/ModalContent.js","components/ui/modal/fragments/modal-body/ModalBody.js","components/ui/modal/fragments/modal-footer/ModalFooter.js","components/ui/modal/fragments/modal-buttons/PrimaryButton.js","components/ui/modal/compiled-modals/EditCanvas.js","components/ui/modal/compiled-modals/edit-stage/EditStage.js","components/ui/modal/compiled-modals/pass-stage/PassStage.js","components/ui/board-pin-menu/BoardPinMenu.js","components/ui/board-pin/BoardPin.js","components/ui/loader/Loader.js","components/ui/dashboard/Dashboard.js","canvas/tree/caption/CaptionPass.js","canvas/tree/edge/lib/line-types/curve.js","canvas/tree/edge/lib/line-types/straight.js","canvas/tree/edge/lib/pathForm.js","canvas/tree/edge/lib/line-types/rectangular.js","canvas/tree/edge/lib/position.js","canvas/tree/edge/Edge.js","canvas/tree/node/title/TitleView.js","canvas/tree/node/stage-status/StageStatus.js","canvas/tree/node/StagePassing.js","canvas/tree/context-menu/ContextMenu.js","canvas/services/resize-service/lib/common.js","canvas/services/resize-service/ResizeService.js","canvas/services/resize-service/lib/initSize.js","canvas/services/resize-service/lib/decreaseSize.js","canvas/services/resize-service/lib/increaseSize.js","canvas/tree/context-menu/edge-contex-menu/EdgeContextMenu.js","canvas/MapPassing.js","components/wrappers/KeyStrokeHandler.js","components/ui/comments-header/CommentsHeader.js","components/ui/add-comment/AddComment.js","components/ui/comment/Comment.js","components/ui/comments/Comments.js","components/wrappers/MapPassingStateProvider.js","canvas/tree/caption/CaptionView.js","canvas/tree/node/StageView.js","canvas/MapViewer.js","components/wrappers/MapViewerStateProvider.js","canvas/tree/caption/Caption.js","canvas/tree/node/title/Title.js","canvas/config.js","canvas/tree/context-menu/node-context-menu/color-picker/ColorPicker.js","canvas/tree/context-menu/node-context-menu/NodeContextMenu.js","canvas/tree/node/connecting-points/connecting-point/ConnectionPoint.js","canvas/tree/node/connecting-points/ConnectingPoints.js","canvas/tree/node/Node.js","canvas/Canvas.js","components/wrappers/CanvasStateProvider.js","services/NodeService.js","services/EdgeService.js","components/ui/auth/LoginForm.js","components/ui/auth/AuthContent.js","components/ui/auth/Login.js","components/wrappers/ProtectedRoute.js","components/ui/auth/RegistrationForm.js","components/ui/auth/Registration.js","components/ui/map-pin-big/MapPinBig.js","components/ui/suggestions/Suggestions.js","components/wrappers/RouterParamsProvider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setCookie","name","value","days","date","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","cookies","split","map","trim","startsWith","substring","length","processEntity","method","url","entities","contentType","a","pathToResources","fetch","headers","body","JSON","stringify","then","response","handleResponse","ok","json","error","Promise","reject","MenuItem","label","to","match","useRouteMatch","isActive","isExact","className","Search","type","placeholder","Header","avatarRef","useRef","useState","username","setUsername","useEffect","avatar","current","src","catch","console","user","log","logo","height","alt","ref","ProfileAvatar","props","res","sendToServer","accept","onChange","e","preventDefault","reader","FileReader","readAsDataURL","target","files","onload","result","ProfileHeader","email","setEmail","setUserInfo","onBlur","Modal","children","modalRoot","getElementById","element","createElement","classList","add","appendChild","removeChild","createPortal","AddBoard","history","useHistory","isModalOpen","setIsModalOpen","createCanvasAndMoveTo","newCanvas","canvas","push","id","onClick","EditCanvas","okButtonName","onCancel","onOk","description","Content","stopPropagation","Body","Footer","PrimaryButton","action","title","titleElement","descriptionElement","defaultValue","EditStage","stageId","stage","setStage","setTitle","setDescription","setStageData","err","data","disabled","rows","cols","finally","PassStage","status","setStatus","onChangeStatus","BoardPinMenu","isOpen","canvasId","canvasTitle","canvasDescription","hideBoardPin","updateBoardPin","closeModal","style","display","responseOk","updatedCanvas","BoardPin","open","setOpen","deleted","setDeleted","mapImageRef","image","onMouseLeave","Loader","Dashboard","loading","setLoading","boards","setBoards","isMounted","board","key","CaptionPass","mapId","Straight","BottomRight","width","lineWidth","padding","BottomLeft","TopRight","TopLeft","pathForm","curve","horizontal","vertical","rectangular","straight","position","from","correction","x","y","Edge","handleMouseMove","bind","handleMouseEnter","handleMouseLeave","this","raiseEdgeLayer","pageX","window","scrollX","pageY","scrollY","elem","elementFromPoint","contains","closest","zIndex","Number","visibility","cursor","isShown","orientation","isDashed","directionName","getDirectionName","positionStyle","top","left","strokeDasharray","d","drawPath","xmlns","onMouseMove","data-allow-context-menu","data-id","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","onMouseEnter","getVerticalName","getHorizontalName","isTop","isRight","React","Component","TitleView","inputElement","createRef","initSize","backgroundColor","text","draggable","onDragStart","statusItems","StageStatus","StagePassing","state","minWidth","isConnectionPointsShown","color","isPassingMenuOpen","isHover","handleClick","setSize","openEditStage","titleLines","mostLongLine","sort","b","fontDescription","getFontDescriptor","textWidth","getTextWidth","setState","setLastTouchedNode","font","context","getContext","measureText","getComputedStyle","getPropertyValue","isContextMenuOpen","handleChangeColor","ContextMenu","positionX","positionY","handleClickCreateNode","getMostDownNode","nodes","getMostRighterNode","initCanvasSize","canvasElement","mostDownNode","nodeHeight","querySelector","offsetHeight","mostDownNodePoint","zoneSize","initCanvasHeight","mostRighterNode","nodeWidth","offsetWidth","mostRighterNodePoint","initCanvasWidth","decreaseCanvas","canvasHeight","parseInt","canvasHeightUnderNode","decreasedZones","decreaseCanvasHeight","canvasWidth","canvasWidthAfterNode","decreaseCanvasWidth","increaseCanvas","canvasScroll","draggingNode","offsetTop","increaseCanvasHeight","offsetLeft","scrollLeft","increaseCanvasWidth","EdgeContextMenu","onDelete","edgeId","MapPassing","isEdgeMenuOpen","editStageId","edgeMenuPosition","isEdgeCreating","isSizeInit","demoEdgeFrom","demoEdgeTo","canvasWrapper","handleContextMenu","handleDeleteNode","handleDragStart","handleDrag","handleDragEnd","handleMouseDown","handleMouseUp","openEdgeContextMenu","handleDeleteEdge","handleOpenEditStage","handleCloseEditStage","handleChangeStatus","prevProps","prevState","updateCanvasSize","lastChangedNode","rerenderConnectedEdges","handleDecreaseCanvas","lastDeletedNode","deleteConnectedEdges","closeNodesContextMenu","closeCanvasContextMenu","closeEdgeContextMenu","nodeId","setOffsetInsideNode","draggedNode","draggedNodeId","dataset","getNewNodePosition","connectionPointId","getAttribute","connectionPointRect","getBoundingClientRect","showDemoEdge","updateDemoEdge","connectionPointElement","createEdge","cursorPosition","getCursorPosition","nodeElement","getConectionPointCoords","mouseX","mouseY","connectedEdges","edges","filter","edge","updateConnectedEdges","updatedEdges","edgeToUpdate","Object","assign","getUpdatedConnectedSide","Map","edgeSide","Math","floor","node","find","internalOffset","newPositionX","newPositionY","targetElement","contextMenuPositionX","contextMenuPositionY","menuPosition","maxWidth","innerWidth","margin","overflow","onContextMenu","onMouseDown","onMouseUp","KeyStrokeHandler","addEventListener","handleKeyUp","removeEventListener","isCtrlSPressed","saveCanvas","event","ctrlKey","canvasUrl","responce","CommentsHeader","count","AddComment","inputRef","commentText","setCommentText","comment","newComment","onCommentAdd","Comment","commentData","_id","alert","isMy","Comments","myComments","setMyComments","othersComments","setOthersComments","commentsCount","setCommentsCount","comments","setComments","my","others","handleDelete","deleteMyComment","commentToDeleteIndex","findIndex","splice","index","MapPassingStateProvider","changeStageStatus","stages","connections","CaptionView","StageView","MapVeiwer","handleSaveStageDescription","MapViewerStateProvider","Caption","Title","onChangeText","handleUpdateTitle","nodeColors","ColorPicker","handleColorValue","data-color","NodeContextMenu","isColorPickerShown","isEditStageOpen","closeEditStage","attachmentSides","right","bottom","ConnectionPoint","attachmentSide","ConnectingPoints","Node","handleChangeTitle","onColorChange","toggleConnectiongPoints","onDoubleClick","handleDoubleClick","onDrag","onDragEnd","Canvas","closeAllContextMenu","allowContextMenu","openContextMenu","openNodeContextMenu","onNodeChange","posXInsideCanvas","posYInsideCanvas","onNodeAdd","onNodeDelete","onEdgeDelete","newTitle","onEdgeAdd","onEdgeChange","connectionPoint","connectedEdgeIds","CanvasStateProvider","addNode","deleteNode","updateNode","addEdge","deleteEdges","updateEdges","textAlign","mapElement","htmlToImage","quality","imageBlob","saveImage","newNode","random","toString","createNode","concat","mapToImage","nodeIndex","nodeList","slice","notDeletedNodes","propertyName","setNestedKey","obj","path","edgeIds","join","indexOf","notDeletedEdges","mapUpdatedEdges","forEach","updatedEdge","get","setUpdatedEdges","updatedEdgesAsArray","Array","values","LoginForm","password","setPassword","setError","handleLogin","loginData","token","location","href","message","AuthContent","plan","Login","ProtectedRout","isAuthenticated","RegistrationForm","emailRef","passwordRef","passwordMatch","setPasswordMatch","handleCreateAccount","errorMsg","getValidationError","registerationData","validity","valid","required","onFocus","pattern","Registration","MapPinBig","Suggestions","RouterParamsProvider","useParams","Children","child","cloneElement","App","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd171ca3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo6.1eb79660.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Plan2.2b80226e.png\";","export const AUTH_TOKEN_NAME = 'mpx_user';\r\n\r\nexport const setCookie = (name, value, days) => {\r\n    const date = new Date();\r\n    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n    const expires = \"expires=\" + date.toUTCString();\r\n    document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport const getCookie = (name) => {\r\n    const cookies = document.cookie.split(\";\").map(cookie => cookie.trim());\r\n    for (const cookie of cookies) {\r\n      if (cookie.startsWith(name + \"=\")) {\r\n        return cookie.substring(name.length + 1);\r\n      }\r\n    }\r\n    return null;\r\n}","import { getCookie } from \"./cookie\";\r\n\r\nconst apiVersion = '/api/v1';\r\n\r\n/**\r\n * Make fetch request with specific method to url with passed entities in body\r\n * \r\n * @param {String} method   POST, PUT, PATCH, DELETE\r\n * @param {String} url      pass to entities starting with slash \"/...\"\r\n * @param {Array}  entities optional\r\n */\r\nexport async function processEntity(method, url, entities, contentType) {\r\n  const pathToResources = apiVersion + url;\r\n\r\n  return fetch(pathToResources, {\r\n    method: method,\r\n    headers: { \r\n      'Authorization': 'Bearer ' + getCookie('mpx_user'),\r\n      'Content-Type': contentType || 'application/json',\r\n    },\r\n    body: JSON.stringify(entities)\r\n  })\r\n    .then(response => handleResponse(response));\r\n}\r\n\r\nasync function handleResponse(response) {\r\n  if (response.ok) {\r\n    return response;\r\n  }\r\n  const error = await response.json();\r\n  return await Promise.reject(error);\r\n}\r\n","import React from 'react';\r\nimport './ManyItem.css';\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function MenuItem({ label, to }) {\r\n  let match = useRouteMatch(to);\r\n  //TO DO fix\r\n  const isActive = match?.isExact ? \"active-link\" : \"\";\r\n\r\n  return (\r\n      <p className={`menu-item ${isActive}`}>\r\n        <Link to={to}>{label}</Link>\r\n      </p>\r\n  );\r\n}","import React from 'react';\r\nimport './Search.css';\r\n\r\nexport default function Search() {\r\n\treturn(\r\n\t\t<div className='header-search'>\r\n\t\t\t<div className='header-search-logo'>🔎︎</div>\r\n\t\t\t<input className='header-search-input' type='text' placeholder='Search' />\r\n\t\t</div>\t\r\n\t)\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.css';\r\nimport { processEntity } from '../../../api/api';\r\nimport logo from './Logo6.jpg';\r\nimport MenuItem from '../menu-item/MenuItem.js';\r\nimport Search from './search/Search';\r\n\r\nexport default function Header() {\r\n  const avatarRef = useRef();\r\n  const [username, setUsername] = useState('User');\r\n\r\n  useEffect(() => {\r\n    processEntity('GET', `/user/you/avatar`)\r\n      .then(response => response.json())\r\n      .then(avatar => avatarRef.current.src = avatar)\r\n      .catch(error => console.error(error))\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    processEntity('GET', `/user/you`)\r\n      .then(response => response.json())\r\n      .then(user => setUsername(user.username || 'User'))\r\n      .catch(error => console.log(error))\r\n  }, []);\r\n  \r\n  return (\r\n      <header className='header'>\r\n        <nav className='header__left'>\r\n          <div className='header__logo'>\r\n            <img src={logo} height='60px' alt='Logo'/>\r\n            <div className='header__logo-name'>Map<span className='header__logo-name-tail'>ex</span></div>\r\n          </div>\r\n          <ul className='header__left-nav'>\r\n            <li>\r\n              <MenuItem to=\"/\" label=\"Home\" />\r\n            </li>\r\n            <li>\r\n              <MenuItem to=\"/library\" label=\"Library\"/>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Search />\r\n        <div className='header__right'>\r\n          <div className='header__user-nav'>\r\n            <div className='header__user-name'>\r\n              <Link to=\"/user/you\">{username}</Link>\r\n            </div>\r\n            <div className='header__user-avatar'>\r\n              <img className='header__user-avatar-img' ref={avatarRef} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef} from \"react\";\r\nimport './ProfileAvatar.css';\r\nimport {processEntity} from \"../../../../api/api\";\r\n\r\nexport default function ProfileAvatar(props) {\r\n\tconst avatarRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n    processEntity('GET', `/user/you/avatar`)\r\n      .then(res => res.json())\r\n      .then(avatar => avatarRef.current.src = avatar)\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n\tconst uploadAvatar = (e) => {\r\n    e.preventDefault()\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    reader.onload = (e) => {\r\n\t\t\tsendToServer(e.target.result);\r\n    };\r\n  }\r\n\r\n\tconst sendToServer = (avatar) => {\r\n    processEntity('POST', `/user/you/avatar`, avatar, 'application/octet-stream')\r\n    \t.then(res => res.json())\r\n      .then(res => avatarRef.current.src = avatar)\r\n      .catch(error => console.error(error));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"profile-header__avatar\">\r\n\t\t\t<img className='profile-header__avatar-img' ref={avatarRef} />\r\n\t\t\t<input className='avatar-upload' type=\"file\" accept='image/*' onChange={uploadAvatar} />\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect, useState, useRef} from 'react';\r\nimport './ProfileHeader.css';\r\nimport ProfileAvatar from './ProfileAvatar/ProfileAvatar';\r\nimport {processEntity} from \"../../../api/api\";\r\n\r\nexport default function ProfileHeader() {\r\n  const avatarRef = useRef();\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const setUserInfo = (user) => {\r\n    setUsername(user.username || 'User');\r\n    setEmail(user.email);\r\n  };\r\n\r\n  useEffect(() => {\r\n    processEntity('GET', `/user/you`)\r\n      .then(res => res.json())\r\n      .then(user => setUserInfo(user))\r\n      .catch(error => console.log(error))\r\n  }, []);\r\n\r\n  const saveUsername = () => {\r\n    processEntity('PUT', `/user/you`, { username })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className='profile-header'>\r\n      <div className=\"profile-header__background\">\r\n        <div className=\"profile-header__content\">\r\n          <ProfileAvatar />\r\n          <div className=\"profile-header__info\">\r\n            <div className=\"profile-header__info-content\">\r\n              <input className='profile-username' value={username} \r\n                onChange={e => setUsername(e.target.value)} \r\n                onBlur={saveUsername}  \r\n              />\r\n              <h4 className=\"profile-header__info-item\">\r\n                {email}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\nimport ModalFooter from \"./fragments/modal-footer/ModalFooter\";\r\nimport PrimaryButton from \"./fragments/modal-buttons/PrimaryButton\";\r\nimport ModalBody from \"./fragments/modal-body/ModalBody\";\r\nimport ModalContent from \"./fragments/modal-content/ModalContent\";\r\nimport EditCanvas from './compiled-modals/EditCanvas';\r\nimport EditStage from './compiled-modals/edit-stage/EditStage';\r\nimport PassStage from './compiled-modals/pass-stage/PassStage';\r\n\r\nexport default function Modal({ children }) {\r\n  const modalRoot = document.getElementById('modal');\r\n  const element = document.createElement('div');\r\n  element.classList.add('modal-dialog');\r\n\r\n  useEffect(() => {\r\n    modalRoot.appendChild(element);\r\n    return () => { modalRoot.removeChild(element); };\r\n  });\r\n\r\n  return (\r\n      createPortal(children, element)\r\n  );\r\n}\r\n\r\nModal.Content = ModalContent;\r\nModal.Body = ModalBody;\r\nModal.Footer = ModalFooter;\r\nModal.PrimaryButton = PrimaryButton;\r\nModal.EditCanvas = EditCanvas;\r\nModal.EditStage = EditStage;\r\nModal.PassStage = PassStage;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './AddBoard.css';\r\nimport { processEntity } from \"../../../api/api\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nexport default function AddBoard() {\r\n  const history = useHistory();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  const handleCreateCanvas = ({name, description}) => {\r\n    const newCanvas = {\r\n      name: name || 'Untitled',\r\n      description: description || 'not described yet...'\r\n    };\r\n\r\n    createCanvasAndMoveTo(newCanvas);\r\n  };\r\n\r\n  const createCanvasAndMoveTo = (newCanvas) => {\r\n    processEntity('POST', '/maps', newCanvas)\r\n        .then(response => response.json())\r\n        .then(canvas => history.push(`map/${canvas.id}/edit`))\r\n        .catch(error => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <div className='add-board'\r\n      onClick={openModal}\r\n    >\r\n      <div className=\"add-board__shadow\">\r\n        <div className=\"add-board__plus\">+</div>\r\n        <div className=\"add-board__title\">New</div>\r\n      </div>\r\n      {\r\n        isModalOpen ?\r\n          <Modal>\r\n            <Modal.EditCanvas\r\n              okButtonName='Create'\r\n              onCancel={closeModal}\r\n              onOk={handleCreateCanvas}\r\n            />\r\n          </Modal> : null\r\n    }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './ModalContent.css';\r\n\r\nexport default function ModalContent({ children }) {\r\n  const stopEventPropagation = (e) => e.stopPropagation();\r\n\r\n  return (\r\n      <div className='modal-content'\r\n           onClick={stopEventPropagation}\r\n      >\r\n        {children}\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport './ModalBody.css';\r\n\r\nexport default function EditCanvas({ children }) {\r\n  return (\r\n      <div className=\"modal-body\">\r\n        {children}\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport './ModalFooter.css';\r\n\r\nexport default function ModalFooter({ children }) {\r\n  return (\r\n      <div className=\"modal-footer\">\r\n        {children}\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport './ModalButtons.css';\r\n\r\nexport default function PrimaryButton({ children, action }) {\r\n  const handleClick = (e) => {\r\n    e.stopPropagation();\r\n    if (action) {\r\n      action();\r\n    }\r\n  };\r\n\r\n  return (\r\n      <button className='modal-button button-primary'\r\n              onClick={handleClick}\r\n      >\r\n        {children}\r\n      </button>\r\n  );\r\n}","import React, {useRef} from 'react';\r\nimport './EditCanvas.css';\r\nimport Modal from '../Modal';\r\n\r\nexport default function EditCanvas(props) {\r\n  const {title = '', description = '', okButtonName = 'Save', onCancel, onOk} = props;\r\n  const titleElement = useRef();\r\n  const descriptionElement = useRef();\r\n\r\n  const handleClickOk = () => {\r\n    const name = titleElement.current.value;\r\n    const description = descriptionElement.current.value;\r\n\r\n    if (onOk) {\r\n      onOk({name, description});\r\n    }\r\n  };\r\n\r\n  return (\r\n      <Modal.Content>\r\n        <Modal.Body>\r\n          <div className=\"modal-body-item\">\r\n            <input ref={titleElement} defaultValue={title} placeholder='Title' type=\"text\"/>\r\n          </div>\r\n          <div className=\"modal-body-item\">\r\n            <textarea ref={descriptionElement} defaultValue={description} placeholder='Description'/>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Modal.PrimaryButton action={onCancel}>\r\n              Cancel\r\n          </Modal.PrimaryButton>\r\n          <Modal.PrimaryButton action={handleClickOk}>\r\n            {okButtonName}\r\n          </Modal.PrimaryButton>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n  );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport Modal from '../../Modal';\r\nimport './EditStage.css';\r\nimport { processEntity } from '../../../../../api/api';\r\n\r\nexport default function EditStage(props) {\r\n\tconst { id : stageId , okButtonName = 'Save', onCancel } = props;\r\n\r\n\tconst [stage, setStage] = useState(null);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tprocessEntity('GET', `/stages/${stageId}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(stage => setStageData(stage))\r\n\t\t\t.catch(err => console.error(err));\r\n\t}, []);\r\n\r\n\tconst setStageData = (stage) => {\r\n\t\tsetStage(stage);\r\n\t\tsetTitle(stage.data.title);\r\n\t\tsetDescription(stage.data.description);\r\n\t}\r\n\r\n\tconst handleSave = () => {\r\n\t\tstage.data.description = description;\r\n\r\n\t\tprocessEntity('PUT', `/stages/${stageId}`, stage)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(stage => console.log(stage))\r\n\t\t\t.catch(err => console.error(err))\r\n\t\t\t.finally(() => onCancel())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal.Content>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<input disabled className=\"stage-title\" value={title} onChange={e => setTitle(e.target.value)}/>\r\n\t\t\t\t<textarea className=\"stage-description\" placeholder=\"description...\"\r\n\t\t\t\t\t\t  rows=\"20\" cols=\"50\" value={description}\r\n\t\t\t\t\t\t  onChange={e => setDescription(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Modal.PrimaryButton action={onCancel}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t</Modal.PrimaryButton>\r\n\t\t\t\t<Modal.PrimaryButton action={handleSave}>\r\n\t\t\t\t\t{okButtonName}\r\n\t\t\t\t</Modal.PrimaryButton>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal.Content>\r\n\t)\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport Modal from '../../Modal';\r\nimport './PassStage.css';\r\nimport { processEntity } from '../../../../../api/api';\r\n\r\nexport default function EditStage(props) {\r\n\tconst { id : stageId , okButtonName = 'Save' } = props;\r\n\r\n\tconst [stage, setStage] = useState(null);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [status, setStatus] = useState('None');\r\n\r\n\tuseEffect(() => {\r\n\t\tprocessEntity('GET', `/stages/${stageId}`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(stage => setStageData(stage))\r\n\t\t\t.catch(err => console.error(err));\r\n\t}, []);\r\n\r\n\tconst setStageData = (stage) => {\r\n\t\tsetStage(stage);\r\n\t\tsetTitle(stage.data.title);\r\n\t\tsetDescription(stage.data.description);\r\n\t\tsetStatus(stage.data.status);\r\n\t}\r\n\r\n\tconst handleChangeStatus = (e) => {\r\n\t\tconst status = e.target.value;\r\n\r\n\t\tprocessEntity('PUT', `/stages/${stageId}/status`, { status })\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetStatus(status);\r\n\t\t\t\tprops.onChangeStatus(stageId, status);\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal.Content>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<input disabled className=\"stage-title\" value={title} onChange={e => setTitle(e.target.value)}/>\r\n\t\t\t\t<textarea disabled className=\"stage-description\" placeholder=\"description...\"\r\n\t\t\t\t\t\t  rows=\"20\" cols=\"50\" value={description}\r\n\t\t\t\t\t\t  onChange={e => setDescription(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"pass-stage-status\">\r\n\t\t\t\t\t<label>Status:</label>\r\n\t\t\t\t\t<select onChange={handleChangeStatus} value={status}>\r\n\t\t\t\t\t\t<option value=\"None\">None</option>\r\n\t\t\t\t\t\t<option value=\"InProgress\">⏩In progress</option>\r\n\t\t\t\t\t\t<option value=\"Done\">✔️Done</option>\r\n\t\t\t\t\t\t<option value=\"Canceled\">❌Cenceled</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Modal.PrimaryButton action={props.onOk}>\r\n\t\t\t\t\t{okButtonName}\r\n\t\t\t\t</Modal.PrimaryButton>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal.Content>\r\n\t)\r\n}","import React, {useState} from \"react\";\r\nimport './BoardPinMenu.css';\r\nimport {processEntity} from \"../../../api/api\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nexport default function BoardPinMenu(props) {\r\n  const { isOpen, canvasId, canvasTitle, canvasDescription, hideBoardPin, updateBoardPin } = props;\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  const handleUpdateCanvas = ({name, description}) => {\r\n    const updatedCanvas = {\r\n      name: name || 'Untitled',\r\n      description: description || 'not described yet...'\r\n    };\r\n\r\n    processEntity('PUT', `/maps/${canvasId}`, updatedCanvas)\r\n        .then(responseOk => updateBoardPin(name, description))\r\n        .then(() => closeModal())\r\n        .catch(error => console.log(error));\r\n  };\r\n\r\n  const handleDeleteCanvas = () => {\r\n    processEntity('DELETE', `/maps/${canvasId}`)\r\n      .then(responseOk => hideBoardPin())\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <ul className=\"board-pin__menu\"\r\n        style={{display: isOpen  ? \"block\" : \"none\"}}\r\n    >\r\n      <li className=\"board-pin__menu-item\"\r\n          onClick={openModal}\r\n      >\r\n        Edit\r\n      </li>\r\n      <li className=\"board-pin__menu-item\"\r\n          onClick={handleDeleteCanvas}\r\n      >\r\n        Delete\r\n      </li>\r\n      {\r\n        isModalOpen ? (\r\n            <Modal>\r\n              <Modal.EditCanvas\r\n                title={canvasTitle}\r\n                description={canvasDescription}\r\n                onCancel={closeModal}\r\n                onOk={handleUpdateCanvas}\r\n              />\r\n            </Modal>\r\n        ) : null\r\n      }\r\n    </ul>\r\n  )\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport './BoardPin.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport BoardPinMenu from \"../board-pin-menu/BoardPinMenu\";\r\nimport { processEntity } from '../../../api/api';\r\n\r\nexport default function BoardPin(props) {\r\n  const {id: canvasId, title: canvasTitle, description: canvasDescription} = props;\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [title, setTitle] = useState(canvasTitle);\r\n  const [description, setDescription] = useState(canvasDescription);\r\n  const mapImageRef = useRef(null);\r\n\r\n  const toggleMenu = (e) => {\r\n    setOpen(!open);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const closeMenu = () => setOpen(false);\r\n  const hideBoardPin = () => setDeleted(true);\r\n\r\n  const updateBoardPin = (name, description) => {\r\n    setTitle(name);\r\n    setDescription(description);\r\n  };\r\n\r\n  const redirectToBoard = () => {\r\n    history.push(`/map/${canvasId}/passing`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    processEntity('GET', `/maps/${props.id}/img`)\r\n      .then(res => res.json())\r\n      .then(image => { mapImageRef.current.src = image })\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n      <div className='board-pin'\r\n        style={{display: deleted ? \"none\" : \"block\"}}\r\n        onClick={redirectToBoard}\r\n      >\r\n        <div className='board-pin__preview'\r\n          onMouseLeave={closeMenu}\r\n        >\r\n          <img className='board-pin__image' ref={mapImageRef} />\r\n          <div className=\"board-pin__description\">\r\n            {description}\r\n          </div>\r\n          <div className=\"board-pin__menu-btn\"\r\n            onClick={toggleMenu}\r\n          >\r\n            ...\r\n            <BoardPinMenu\r\n              isOpen={open}\r\n              canvasId={canvasId}\r\n              canvasTitle={title}\r\n              canvasDescription={description}\r\n              hideBoardPin={hideBoardPin}\r\n              updateBoardPin={updateBoardPin}\r\n            />\r\n          </div>\r\n          <div className='board-pin__overlay'></div>\r\n        </div>\r\n        <div className='board-pin__info'>\r\n          <div className=\"board-pin__info-title\" title={title}>\r\n            {title}\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}","import React from \"react\";\r\nimport './Loader.css';\r\n\r\nexport default function Loader() {\r\n  return (\r\n      <div className=\"loader\">Loading...</div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport AddBoard from \"../add-board/AddBoard\";\r\nimport BoardPin from '../board-pin/BoardPin';\r\nimport { processEntity } from '../../../api/api';\r\nimport './Dashboard.css';\r\nimport Loader from \"../loader/Loader\";\r\n\r\nexport default function Dashboard() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [boards, setBoards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    processEntity('GET', '/maps')\r\n        .then(response => response.json())\r\n        .then(boards => {\r\n          if (isMounted) setBoards(boards);\r\n        })\r\n        .catch(error => console.log(error))\r\n        .finally(() => setLoading(false));\r\n\r\n    return () => { isMounted = false };\r\n  }, []);\r\n\r\n  if (loading) return <Loader/>;\r\n\r\n  return(\r\n    <div className='dashboard-container'>\r\n      <div className='maps-switcher'>\r\n          <div className='maps-switcher-cat cat-choosen'>Created</div>\r\n          <div className='maps-switcher-cat'>Saved</div>\r\n      </div>\r\n      <div className=\"boards-holder\">\r\n        <AddBoard/>\r\n        {boards.map(board =>\r\n          <BoardPin\r\n            key={board.id}\r\n            id={board.id}\r\n            title={board.name}\r\n            description={board.description}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport './Caption.css';\r\n\r\nexport default function CaptionPass(props) {\r\n\tconst history = useHistory();\r\n\r\n\tconst toLibrary = () => {\r\n\t\thistory.push(`/library`);\r\n\t}\r\n\r\n\tconst save = () => {\r\n\t\thistory.push(`/map/${props.mapId}/edit`);\r\n\t}\r\n\r\n  return (\r\n\t\t<div className='canvas-header-container'>\r\n\t\t\t<header className='canvas-header'>\r\n\t\t\t\t<div className='header-about'>\r\n\t\t\t\t\t<div className='header-title'>{props.title || 'Title'}</div>\r\n\t\t\t\t\t<div className='header-description'>{props.description || 'Some description'}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='header-actions'>\r\n\t\t\t\t\t<input className='header-nav-button' type='button' value='← Library' onClick={toLibrary} />\r\n\t\t\t\t\t<input className='header-nav-button' type='button' value='✎ Edit' onClick={save} />\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t</div>\r\n  );\r\n}\r\n","export const HorizontalCurve = {\r\n  BottomRight: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M0 \" + padding +\r\n        \"Q \" + width / 3.5 + \" 0 \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + width + \" \" + (height - padding);\r\n  },\r\n\r\n  BottomLeft: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M\" + (width - padding) + \" \" + padding +\r\n        \"Q \" + width / 1.5 + \" 0 \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + padding + \" \" + (height - padding);\r\n  },\r\n\r\n  TopRight: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M\" + padding + \" \" + (height - padding) + \" \" +\r\n        \"Q \" + width / 3.5 + \" \" + height + \" \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + (width - padding) + \" \" + padding;\r\n  },\r\n\r\n  TopLeft: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M\" + padding + \" \" + padding +\r\n        \"Q \" + width / 3.5 + \" 0 \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + (width - padding) + \" \" + (height - padding);\r\n  }\r\n};\r\n\r\nexport const VerticalCurve = {\r\n  BottomRight: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M\" + padding + \" \" + padding +\r\n        \"Q 0 \" + height / 3.5 + \" \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + (width - padding) + \" \" + (height - padding);\r\n  },\r\n\r\n  BottomLeft: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M\" + (width - padding) + \" \" + padding +\r\n        \"Q \" + (width - padding) + \" \" + height / 3.5 + \" \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + padding + \" \" + (height - padding);\r\n  },\r\n\r\n  TopRight: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M\" + padding + \" \" + (height - padding) + \" \" +\r\n        \"Q 0 \" + height / 1.5 + \" \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + (width - padding) + \" \" + padding;\r\n  },\r\n\r\n  TopLeft: (height, width, lineWidth) => {\r\n    const padding = lineWidth * 0.5;\r\n\r\n    return \"M\" + padding + \" \" + padding +\r\n        \"Q 0 \" + height / 3.5 + \" \" +\r\n        width / 2 + \" \" + height / 2 +\r\n        \" T \" + (width - padding) + \" \" + (height - padding);\r\n  }\r\n};","export const Straight = {\r\n  BottomRight: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + padding + \" \" + padding +\r\n        \" L\" + (width - padding) +  \" \" + (height - padding);\r\n  },\r\n\r\n  BottomLeft: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (width - padding) + \" \" + padding +\r\n        \" L\" + padding + \" \" + (height - padding);\r\n  },\r\n\r\n  TopRight: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (width - padding) + \" \" + padding +\r\n        \" L\" + padding + \" \" + (height - padding);\r\n  },\r\n\r\n  TopLeft: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (width - padding) + \" \" + (height - padding) +\r\n        \" L\" + padding + \" \" + padding;\r\n  },\r\n};","import { HorizontalCurve, VerticalCurve } from './line-types/curve';\r\nimport { HorizontalRectangular, VerticalRectangular } from './line-types/rectangular';\r\nimport { Straight } from './line-types/straight';\r\n\r\nexport const pathForm = {\r\n  curve: {\r\n    horizontal: HorizontalCurve,\r\n    vertical: VerticalCurve\r\n  },\r\n  rectangular: {\r\n    horizontal: HorizontalRectangular,\r\n    vertical: VerticalRectangular\r\n  },\r\n  straight: {\r\n    horizontal: Straight,\r\n    vertical: Straight\r\n  }\r\n};","export const HorizontalRectangular = {\r\n  BottomRight: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + padding + \" \" + padding +\r\n        \" L\" + (width / 2) +  \" \" + (padding) +\r\n        \" L\" + (width / 2) +  \" \" + (height - padding) +\r\n        \" L\" + (width - padding) +  \" \" + (height - padding);\r\n  },\r\n\r\n  BottomLeft: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (width - padding) + \" \" + padding +\r\n        \" L\" + (width / 2) +  \" \" + (padding) +\r\n        \" L\" + (width / 2) +  \" \" + (height - padding) +\r\n        \" L\" + padding + \" \" + (height - padding);\r\n  },\r\n\r\n  TopRight: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (padding) + \" \" + (height - padding) +\r\n        \" L\" + (width / 2) +  \" \" + (height - padding) +\r\n        \" L\" + (width / 2) +  \" \" + (padding) +\r\n        \" L\" + (width - padding) + \" \" + (padding);\r\n  },\r\n\r\n  TopLeft: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (width - padding) + \" \" + (height - padding) +\r\n        \" L\" + (width / 2) +  \" \" + (height - padding ) +\r\n        \" L\" + (width / 2) +  \" \" + (padding) +\r\n        \" L\" + padding + \" \" + padding;\r\n  },\r\n};\r\n\r\nexport const VerticalRectangular = {\r\n  BottomRight: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + padding + \" \" + padding +\r\n        \" L\" + (padding) +  \" \" + (height / 2) +\r\n        \" L\" + (width - padding) +  \" \" + (height / 2) +\r\n        \" L\" + (width - padding) +  \" \" + (height - padding);\r\n  },\r\n\r\n  BottomLeft: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (width - padding) + \" \" + padding +\r\n        \" L\" + (width - padding) +  \" \" + (height/ 2) +\r\n        \" L\" + (padding) +  \" \" + (height / 2) +\r\n        \" L\" + padding + \" \" + (height - padding);\r\n  },\r\n\r\n  TopRight: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (padding) + \" \" + (height - padding) +\r\n        \" L\" + (padding) +  \" \" + (height / 2) +\r\n        \" L\" + (width - padding) +  \" \" + (height / 2) +\r\n        \" L\" + (width - padding) + \" \" + (padding);\r\n  },\r\n\r\n  TopLeft: (height, width, lineWidth) => {\r\n    const padding = 0.5 * lineWidth;\r\n\r\n    return \"M\" + (width - padding) + \" \" + (height - padding) +\r\n        \" L\" + (width - padding) +  \" \" + (height / 2) +\r\n        \" L\" + (padding) +  \" \" + (height / 2) +\r\n        \" L\" + padding + \" \" + padding;\r\n  },\r\n};","export const position = {\r\n  BottomRight: (from, to, lineWidth) => {\r\n    const correction = lineWidth - 1;\r\n\r\n    return {\r\n      x: from.x - correction / 2,\r\n      y: from.y - correction / 2,\r\n      width: to.x - from.x + lineWidth,\r\n      height: to.y - from.y + lineWidth\r\n    };\r\n  },\r\n\r\n  BottomLeft: (from, to, lineWidth) => {\r\n    const correction = lineWidth - 1;\r\n\r\n    return {\r\n      x: to.x - correction / 2,\r\n      y: from.y - correction / 2,\r\n      width: from.x - to.x + lineWidth,\r\n      height: to.y - from.y + lineWidth\r\n    };\r\n  },\r\n\r\n  TopRight: (from, to, lineWidth) => {\r\n    const correction = lineWidth - 1;\r\n\r\n    return {\r\n      x: from.x - correction / 2,\r\n      y: to.y - correction / 2,\r\n      width: to.x - from.x + lineWidth,\r\n      height: from.y - to.y + lineWidth\r\n    };\r\n  },\r\n\r\n  TopLeft: (from, to, lineWidth) => {\r\n    const correction = lineWidth - 1;\r\n\r\n    return {\r\n      x: to.x - correction / 2,\r\n      y: to.y - correction / 2,\r\n      width: from.x - to.x + lineWidth,\r\n      height: from.y - to.y + lineWidth\r\n    };\r\n  }\r\n};","import React from 'react';\r\nimport { pathForm } from './lib/pathForm';\r\nimport { position } from './lib/position';\r\n\r\nconst defaultZIndex = '100';\r\n\r\nexport default class Edge extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    this.raiseEdgeLayer(e.pageX - window.scrollX, e.pageY - window.scrollY);\r\n  };\r\n\r\n  raiseEdgeLayer(x, y) {\r\n    const elem = document.elementFromPoint(x, y);\r\n\r\n    if (elem.classList.contains('edge')) {\r\n      elem.closest('.edge-rect').style.zIndex = Number(defaultZIndex) + 10;\r\n      return;\r\n    }\r\n\r\n    if (!elem.classList.contains('edge-rect')) return;\r\n\r\n    elem.style.zIndex = defaultZIndex;\r\n    elem.style.visibility = 'hidden';\r\n\r\n    this.raiseEdgeLayer(x, y);\r\n    elem.style.visibility = 'visible';\r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    //e.target.style.stroke = 'black';\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isShown) return null;\r\n\r\n    const {from, to, width = 1, type = 'straight', orientation = 'horizontal', isDashed = false} = this.props;\r\n\r\n    const directionName = this.getDirectionName(from, to);\r\n\r\n    const positionStyle = position[directionName](from, to, width);\r\n    const style = {\r\n      position: 'absolute',\r\n      top: positionStyle.y,\r\n      left: positionStyle.x,\r\n      height: positionStyle.height,\r\n      width: positionStyle.width,\r\n      strokeDasharray: isDashed ? (width * 3 + \" \" + width * 2) : \"\",\r\n      zIndex: defaultZIndex\r\n    };\r\n\r\n    const drawPath = pathForm[type][orientation][directionName];\r\n    const d = drawPath(positionStyle.height, positionStyle.width, width);\r\n\r\n    return (\r\n      <svg className='edge-rect' xmlns=\"http://www.w3.org/2000/svg\" style={style}\r\n        onMouseMove={this.handleMouseMove}\r\n        data-allow-context-menu=\"true\"\r\n      >\r\n        <path data-id={this.props.id}\r\n              data-allow-context-menu=\"true\"\r\n              className='edge'\r\n              d={d}\r\n              stroke=\"black\"\r\n              strokeWidth={width}\r\n              fill=\"transparent\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              onMouseEnter={this.handleMouseEnter}\r\n              onMouseLeave={this.handleMouseLeave}\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  getDirectionName(from ,to) {\r\n    return this.getVerticalName(from, to) + this.getHorizontalName(from, to);\r\n  }\r\n\r\n  getVerticalName(from, to) {\r\n    if (this.isTop(from, to)) {\r\n      return 'Top';\r\n    }\r\n    return 'Bottom';\r\n  }\r\n\r\n  getHorizontalName(from, to) {\r\n    if (this.isRight(from, to)) {\r\n      return 'Right';\r\n    }\r\n    return 'Left';\r\n  }\r\n\r\n  isRight(from, to) {\r\n    return from.x < to.x;\r\n  }\r\n\r\n  isTop(from, to) {\r\n    return from.y > to.y;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Title.css';\r\n\r\nexport default class TitleView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputElement = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initSize(this.inputElement.current);\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      backgroundColor: this.props.backgroundColor,\r\n      cursor: 'pointer'\r\n    };\r\n\r\n    return (\r\n      <textarea  data-id={this.props.stageId} disabled ref={this.inputElement}\r\n        className='node-title'\r\n        style={style}\r\n        rows={this.props.rows}\r\n        defaultValue={this.props.text}\r\n        draggable onDragStart={e => e.preventDefault()}\r\n        onClick={this.props.onClick}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport './StageStatus.css';\r\n\r\nconst statusItems = {\r\n\t'InProgress': <div className=\"current-status status-passing\">⇒</div>,\r\n\t'Done': <div className=\"current-status status-done\">✔</div>,\r\n\t'Canceled': <div className=\"current-status status-canceled\">✖</div>\r\n}\r\n\r\nexport default function StageStatus(props) {\r\n\treturn (\r\n\t\t<div className=\"stage-status\">\r\n\t\t\t{ statusItems[props.status] || null }\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport './StagePassing.css';\r\nimport TitleView from './title/TitleView';\r\nimport StageStatus from './stage-status/StageStatus';\r\n\r\nconst minWidth = 5;\r\nconst hoverBorder = 1;\r\n\r\nexport default class StagePassing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      width: minWidth + 'px',\r\n      isConnectionPointsShown: false,\r\n      color: this.props.color,\r\n      isPassingMenuOpen: false,\r\n      isHover: false\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSize = this.setSize.bind(this);\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n  }\r\n\r\n  handleClick(e) { \r\n    this.props.openEditStage(e);\r\n  }\r\n\r\n  setSize(inputElement) {\r\n    const titleLines = inputElement.value.split('\\n');\r\n    const mostLongLine = titleLines.sort((a, b) => b.length - a.length)[0];\r\n    const fontDescription = this.getFontDescriptor(inputElement);\r\n    const textWidth = this.getTextWidth(mostLongLine, fontDescription);\r\n\r\n    this.setState({\r\n      width: minWidth + textWidth + 'px',\r\n      rows: titleLines.length\r\n    });\r\n\r\n    this.props.setLastTouchedNode(inputElement.closest('.node'));\r\n  }\r\n\r\n  getTextWidth(text, font) {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext(\"2d\");\r\n    context.font = font;\r\n    const metrics = context.measureText(text);\r\n    return metrics.width;\r\n  }\r\n\r\n  getFontDescriptor(element) {\r\n    const fontWeight = getComputedStyle(element).getPropertyValue(\"font-weight\");\r\n    const fontSize = getComputedStyle(element).getPropertyValue(\"font-size\");\r\n    const fontFamily = getComputedStyle(element).getPropertyValue(\"font-family\");\r\n    return fontWeight + ' ' + fontSize + ' ' + fontFamily; \r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    this.setState({ isPassingMenuOpen: true });\r\n    this.setState({ isHover: true });\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    this.setState({ isPassingMenuOpen: false });\r\n    this.setState({ isHover: false });\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      left: this.state.isHover ? this.props.position.x - hoverBorder : this.props.position.x,\r\n      top:  this.state.isHover ? this.props.position.y - hoverBorder : this.props.position.y,\r\n      backgroundColor: this.props.color,\r\n      width: this.state.width,\r\n      zIndex: this.props.isContextMenuOpen ? '4000' : '1000'\r\n    };\r\n\r\n    return (\r\n      <div data-id={this.props.id} className='stage-passing' style={style} data-allow-context-menu \r\n        onClick={this.handleClick}\r\n        onChange={this.handleChangeColor}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n      >\r\n        <TitleView\r\n          stageId={this.props.id}\r\n          text={this.props.title}\r\n          rows={this.state.rows}\r\n          initSize={this.setSize}\r\n          backgroundColor={this.props.color}\r\n        />\r\n        <StageStatus status={this.props.status} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./ContextMenu.css\";\r\n\r\nexport default class ContextMenu extends React.Component {\r\n  render() {\r\n    if (!this.props.isOpen) return null;\r\n\r\n    const style = {\r\n      left: this.props.positionX,\r\n      top: this.props.positionY\r\n    };\r\n\r\n    return (\r\n      <div className='canvas-context-menu' style={style}>\r\n        <p onClick={this.props.handleClickCreateNode}>+ add stage</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const zoneSize = 100;\r\nexport const minWidth = zoneSize * 9;\r\nexport const minHeight = zoneSize * 3;\r\n\r\nexport function getMostDownNode(nodes) {\r\n  return nodes.sort((a, b) => b.position.y - a.position.y)[0];\r\n} \r\n\r\nexport function getMostRighterNode(nodes) {\r\n  return nodes.sort((a, b) => b.position.x - a.position.x)[0];\r\n}\r\n","import { initCanvasHeight, initCanvasWidth } from './lib/initSize.js';\r\nimport { decreaseCanvasHeight, decreaseCanvasWidth } from './lib/decreaseSize.js';\r\nimport { increaseCanvasHeight, increaseCanvasWidth } from './lib/increaseSize.js';\r\nexport { zoneSize } from './lib/common.js';\r\n\r\n/**\r\n * initialize canvas size for first time\r\n * \r\n * @param {HTMLElement} canvasElement \r\n * @param {Array} nodes \r\n * \r\n * @returns object {height, width} with new canvas size\r\n */\r\nexport function initCanvasSize(canvasElement, nodes) {\r\n  const height = initCanvasHeight(canvasElement, nodes);\r\n  const width = initCanvasWidth(canvasElement, nodes);\r\n\r\n  return {height, width};  \r\n}\r\n\r\n/**\r\n * Find most righter and most down nodes and remove empty zones\r\n * \r\n * @param {HTMLElement} canvasElement \r\n * @param {Array} nodes\r\n * \r\n * @returns object {height, width} with new canvas size\r\n */\r\nexport function decreaseCanvas(canvasElement, nodes) {\r\n  const height = decreaseCanvasHeight(canvasElement, nodes);\r\n  const width = decreaseCanvasWidth(canvasElement, nodes);\r\n\r\n  return {height, width};\r\n}\r\n\r\n/**\r\n * if node out of current canvas size, add new zones\r\n *   \r\n * @param {HTMLElement} canvasElement \r\n * @param {HTMLElement} canvasScroll \r\n * @param {HTMLElement} draggingNode \r\n * @param {number} pageX \r\n * @param {number} pageY \r\n * \r\n * @returns object {height, widht} with new canvas size\r\n */\r\nexport function increaseCanvas(canvasElement, canvasScroll, draggingNode, pageX, pageY) {\r\n  const height = increaseCanvasHeight(canvasElement, draggingNode, pageY);\r\n  const width = increaseCanvasWidth(canvasElement, canvasScroll, draggingNode, pageX);\r\n\r\n  return {height, width};\r\n}\r\n","import {zoneSize, minHeight, minWidth} from './common.js';\r\nimport {getMostDownNode, getMostRighterNode} from './common.js';\r\n\r\nexport function initCanvasWidth(canvasElement, nodes) {\r\n  const mostRighterNode = getMostRighterNode(nodes);\r\n  \r\n  const nodeWidth = canvasElement.querySelector(`div[data-id='${mostRighterNode.id}']`).offsetWidth;\r\n  const mostRighterNodePoint = mostRighterNode.position.x + nodeWidth;\r\n\r\n  if (mostRighterNodePoint <= minWidth) {\r\n    return minWidth;\r\n  }\r\n\r\n  const leftedInLastZone = zoneSize - (mostRighterNodePoint % zoneSize);\r\n  return mostRighterNodePoint + leftedInLastZone;\r\n}\r\n\r\nexport function initCanvasHeight(canvasElement, nodes) {\r\n  const mostDownNode = getMostDownNode(nodes);\r\n  \r\n  const nodeHeight = canvasElement.querySelector(`div[data-id='${mostDownNode.id}']`).offsetHeight;\r\n  const mostDownNodePoint = mostDownNode.position.y + nodeHeight;\r\n\r\n  if (mostDownNodePoint <= minHeight) {\r\n    return minHeight;\r\n  }\r\n\r\n  const leftedInLastZone = zoneSize - (mostDownNodePoint % zoneSize);\r\n  return mostDownNodePoint + leftedInLastZone;\r\n}\r\n","import { zoneSize, minWidth, minHeight } from './common.js';\r\nimport { getMostDownNode, getMostRighterNode } from './common.js';\r\n\r\n\r\nexport function decreaseCanvasHeight(canvasElement, nodes) {\r\n  const canvasHeight = parseInt(getComputedStyle(canvasElement).getPropertyValue('height'));\r\n  if (canvasHeight <= minHeight) return minHeight;\r\n\r\n  const mostDownNode = getMostDownNode(nodes);\r\n  const nodeHeight = canvasElement.querySelector(`div[data-id='${mostDownNode.id}']`).offsetHeight;\r\n  \r\n  const canvasHeightUnderNode = canvasHeight - (mostDownNode.position.y + nodeHeight);  \r\n  const leftedInLastZone = canvasHeightUnderNode % zoneSize;\r\n  const decreasedZones = canvasHeightUnderNode - leftedInLastZone;\r\n  \r\n  const mostDownNodePoint = mostDownNode.position.y + nodeHeight;\r\n  if (mostDownNodePoint < canvasHeight - zoneSize) {\r\n    return canvasHeight - decreasedZones;\r\n  }\r\n\r\n  return canvasHeight;\r\n}\r\n\r\nexport function decreaseCanvasWidth(canvasElement, nodes) {\r\n  const canvasWidth = parseInt(getComputedStyle(canvasElement).getPropertyValue('width'));\r\n  if (canvasWidth <= minWidth) return minWidth;\r\n  \r\n  const mostRighterNode = getMostRighterNode(nodes);\r\n  const nodeWidth = canvasElement.querySelector(`div[data-id='${mostRighterNode.id}']`).offsetWidth;\r\n  \r\n  const canvasWidthAfterNode = canvasWidth - (mostRighterNode.position.x + nodeWidth);\r\n  const leftedInLastZone = canvasWidthAfterNode % zoneSize;\r\n  const decreasedZones = canvasWidthAfterNode - leftedInLastZone;\r\n\r\n  const mostRighterNodePoint = mostRighterNode.position.x + nodeWidth; \r\n  if (mostRighterNodePoint < canvasWidth - zoneSize) {\r\n    return canvasWidth - decreasedZones;\r\n  }\r\n\r\n  return canvasWidth;\r\n}\r\n","import { zoneSize } from './common.js';\r\n\r\nexport function increaseCanvasHeight(canvasElement, draggingNode, pageY) {\r\n  const canvasHeight = parseInt(getComputedStyle(canvasElement).getPropertyValue('height'));\r\n  const draggingNodeOffsetTop = pageY - canvasElement.offsetTop;\r\n\r\n  const mostDownNodePoint = draggingNodeOffsetTop + draggingNode.offsetHeight;\r\n  if (mostDownNodePoint > canvasHeight) {\r\n    return canvasHeight + zoneSize;\r\n  }\r\n\r\n  return canvasHeight;\r\n}\r\n\r\nexport function increaseCanvasWidth(canvasElement, canvasScroll, draggingNode, pageX) {\r\n  const canvasWidth = parseInt(getComputedStyle(canvasElement).getPropertyValue('width'));\r\n  const nodeOffsetLeft = pageX - canvasElement.offsetLeft + canvasScroll.scrollLeft;\r\n  const mostRighterNodePoint = nodeOffsetLeft + canvasScroll.scrollLeft + draggingNode.offsetWidth;\r\n  \r\n  if (mostRighterNodePoint > canvasWidth) {\r\n    return canvasWidth + zoneSize;\r\n  }\r\n\r\n  return canvasWidth;\r\n}\r\n","import React from 'react';\r\nimport './EdgeContextMenu.css';\r\n\r\nexport default function EdgeContextMenu(props) {\r\n  if (!props.isOpen) return null;\r\n\r\n  const style = {\r\n    left: props.positionX,\r\n    top: props.positionY\r\n  };\r\n\r\n  const deleteEdge = () => {\r\n    props.onDelete(props.edgeId);\r\n  };\r\n\r\n  return (\r\n      <div className=\"edge-context-menu\" style={style}>\r\n        <div className=\"menu-point\">\r\n          Type\r\n        </div>\r\n        <div className=\"menu-point\">\r\n          Size\r\n        </div>\r\n        <div className=\"menu-point\">\r\n          Color\r\n        </div>\r\n        <div className=\"menu-point delete-edge\"\r\n             onClick={deleteEdge}>\r\n          Delete\r\n        </div>\r\n      </div>\r\n  );\r\n}","import React from 'react';\r\nimport './Canvas.css';\r\nimport CaptionPass from './tree/caption/CaptionPass';\r\nimport Edge from './tree/edge/Edge';\r\nimport StagePassing from './tree/node/StagePassing';\r\nimport ContextMenu from './tree/context-menu/ContextMenu';\r\nimport {increaseCanvas, decreaseCanvas, initCanvasSize, zoneSize} from './services/resize-service/ResizeService.js';\r\nimport EdgeContextMenu from \"./tree/context-menu/edge-contex-menu/EdgeContextMenu\";\r\nimport Modal from '../components/ui/modal/Modal';\r\n\r\nexport default class MapPassing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isContextMenuOpen: false,\r\n      isEdgeMenuOpen: false,\r\n      editStageId: null,\r\n      edgeMenuPosition: {x: 0, y: 0},\r\n      isEdgeCreating: false,\r\n      isSizeInit: false,\r\n      demoEdgeFrom: {x: 0, y: 0},\r\n      demoEdgeTo: {x: 0, y: 0},\r\n    };\r\n    \r\n    this.canvasWrapper = React.createRef();\r\n    this.canvasElement = React.createRef();\r\n    this.canvasScroll = React.createRef();\r\n\r\n    this.handleContextMenu = this.handleContextMenu.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClickCreateNode = this.handleClickCreateNode.bind(this);\r\n    this.handleDeleteNode = this.handleDeleteNode.bind(this);\r\n    this.handleDragStart = this.handleDragStart.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.setLastTouchedNode = this.setLastTouchedNode.bind(this);\r\n    this.openEdgeContextMenu = this.openEdgeContextMenu.bind(this);\r\n    this.handleDeleteEdge = this.handleDeleteEdge.bind(this);\r\n    this.handleChangeColor = this.handleChangeColor.bind(this);\r\n    this.handleOpenEditStage = this.handleOpenEditStage.bind(this);\r\n    this.handleCloseEditStage = this.handleCloseEditStage.bind(this);\r\n    this.handleChangeStatus = this.handleChangeStatus.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {height, width} = initCanvasSize(this.canvasElement.current, this.props.nodes);\r\n    this.updateCanvasSize(height, width);\r\n    if (!this.state.isSizeInit && this.state.lastChangedNode) {\r\n      const {height, width} = initCanvasSize(this.canvasElement.current, this.props.nodes);\r\n      this.updateCanvasSize(height, width);\r\n      this.setState({ isSizeInit: true });\r\n    }\r\n    if (this.state.lastChangedNode) {\r\n      this.rerenderConnectedEdges(this.state.lastChangedNode);\r\n      this.handleDecreaseCanvas();\r\n      \r\n      this.setState({ lastChangedNode: null });\r\n    }\r\n    if (this.state.lastDeletedNode) {\r\n      this.deleteConnectedEdges(this.state.lastDeletedNode);\r\n    }\r\n  }\r\n\r\n  handleContextMenu(e) {\r\n    /*\r\n    e.preventDefault();\r\n    this.closeAllContextMenu();\r\n\r\n    if (!e.target.dataset.allowContextMenu) return;\r\n\r\n    if (e.target.classList.contains('canvas')) {\r\n      this.openContextMenu(this.getCursorPosition(e.pageX, e.pageY, e.target));\r\n    }\r\n    if (e.target.classList.contains('node')) {\r\n      this.openNodeContextMenu(e.target.dataset.id);\r\n    }\r\n    if (e.target.classList.contains('edge')) {\r\n      this.openEdgeContextMenu(e.target.dataset.id, e.pageX, e.pageY);\r\n    }\r\n    */\r\n  }\r\n\r\n  closeAllContextMenu() {\r\n    this.closeNodesContextMenu();\r\n    this.closeCanvasContextMenu();\r\n    this.closeEdgeContextMenu();\r\n  }\r\n\r\n  handleClick(e) {\r\n    //this.closeAllContextMenu();\r\n  }\r\n\r\n  handleChangeColor(nodeId, color) {\r\n    //this.props.onNodeChange(nodeId, \"data.color\", color);\r\n  }\r\n\r\n  handleDragStart(e) {\r\n    if (e.target.classList.contains('connection-point')) return;\r\n    if (e.target.classList.contains('node-title')) return;\r\n    if (e.target.classList.contains('menu-point')) return;\r\n\r\n    this.setOffsetInsideNode(e.pageX, e.pageY, e.target);\r\n  }\r\n\r\n  handleDrag(e) {\r\n    const draggingNode = e.target;\r\n    this.increaseCanvas(this.canvasElement.current, this.canvasScroll.current, draggingNode, e.pageX, e.pageY);\r\n  }\r\n\r\n  handleDragEnd(e) {\r\n    if (e.target.classList.contains('node-title')) return;\r\n    const draggedNode = e.target;\r\n    const draggedNodeId = e.target.dataset.id;\r\n    \r\n    this.setState({ isEdgeCreating: false });\r\n    this.setState({ lastChangedNode: draggedNode });\r\n    \r\n    const position = this.getNewNodePosition(draggedNodeId, e.pageX, e.pageY);\r\n    //this.props.onNodeChange(draggedNodeId, \"position\", position);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    if (!e.target.classList.contains('connection-point')) return;\r\n    const connectionPointId = e.target.getAttribute('id');\r\n    const connectionPointRect = e.target.getBoundingClientRect();\r\n    this.showDemoEdge(connectionPointId, connectionPointRect);\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    if (!this.state.isEdgeCreating) return;\r\n    this.updateDemoEdge(e.pageX, e.pageY);\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    if (!this.state.isEdgeCreating) return;\r\n    if (!e.target.classList.contains('connection-point')) {\r\n      this.setState({ isEdgeCreating: false });\r\n      return;\r\n    }\r\n    const connectionPointElement = e.target;\r\n    this.createEdge(connectionPointElement);\r\n    this.setState({ isEdgeCreating: false });\r\n  }\r\n\r\n  handleClickCreateNode(e) {\r\n    const cursorPosition = this.getCursorPosition(e.pageX, e.pageY, e.target);\r\n    const posXInsideCanvas = cursorPosition.x - this.canvasElement.current.offsetLeft;\r\n    const posYInsideCanvas = cursorPosition.y - this.canvasElement.current.offsetTop;\r\n    \r\n    //this.props.onNodeAdd({ x: posXInsideCanvas, y: posYInsideCanvas }, this.canvasScroll.current);\r\n  }\r\n\r\n  handleDeleteNode(e) {\r\n    const nodeElement = e.target.closest('.node');\r\n\r\n    //this.props.onNodeDelete(nodeElement.dataset.id);\r\n    this.setState({ lastDeletedNode: nodeElement });\r\n  }\r\n\r\n  handleDeleteEdge(edgeId) {\r\n    //this.props.onEdgeDelete([edgeId]);\r\n  }\r\n\r\n  handleUpdateTitle(e) {\r\n    const nodeId = e.target.closest('.node').dataset.id;\r\n    const newTitle = e.target.value;\r\n    \r\n    //this.props.onNodeChange(nodeId, \"data.title\", newTitle);\r\n  }\r\n\r\n  increaseCanvas(canvasElement, canvasScroll, draggingNode, pageX, pageY) {\r\n    const {height, width} = increaseCanvas(canvasElement, canvasScroll, draggingNode, pageX, pageY);\r\n    this.updateCanvasSize(height, width);\r\n  }\r\n\r\n  handleDecreaseCanvas() {\r\n    const {height, width} = decreaseCanvas(this.canvasElement.current, this.props.nodes);\r\n    this.updateCanvasSize(height, width);\r\n  }\r\n\r\n  updateCanvasSize(height, width) {\r\n    this.canvasElement.current.style.height = height + 'px';\r\n    this.canvasElement.current.style.width = width + 'px';\r\n    this.canvasWrapper.current.style.width = width + 'px';\r\n  }\r\n\r\n  createEdge(connectionPointElement) {\r\n    const connectionPointId = connectionPointElement.getAttribute('id');\r\n    const connectionPointRect = connectionPointElement.getBoundingClientRect();\r\n    \r\n    const demoEdgeTo = this.getConectionPointCoords(connectionPointId, connectionPointRect);\r\n    \r\n    if (this.state.demoEdgeFrom.x === demoEdgeTo.x) return;\r\n\r\n    //this.props.onEdgeAdd(this.state.demoEdgeFrom, demoEdgeTo);\r\n  }\r\n\r\n  showDemoEdge(connectionPointId, connectionPointRect) {\r\n    const demoEdgeFrom = this.getConectionPointCoords(connectionPointId, connectionPointRect);\r\n    this.setState({\r\n      demoEdgeFrom: demoEdgeFrom,\r\n      demoEdgeTo: demoEdgeFrom,\r\n      isEdgeCreating: true\r\n    });\r\n  }\r\n\r\n  updateDemoEdge(mouseX, mouseY) {\r\n    const demoEdgeTo = {\r\n      x: mouseX - this.canvasElement.current.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: mouseY - this.canvasElement.current.offsetTop\r\n    };\r\n    this.setState({ demoEdgeTo: demoEdgeTo });\r\n  }\r\n\r\n  rerenderConnectedEdges(nodeElement) {\r\n    const nodeId = nodeElement.dataset.id;\r\n    const connectedEdges = this.props.edges.filter(edge => \r\n      edge.from.connectionPointId.split('_')[0] === nodeId || edge.to.connectionPointId.split('_')[0] === nodeId);\r\n      \r\n    const updatedEdges = this.updateConnectedEdges(nodeId, connectedEdges);\r\n    //this.props.onEdgeChange(updatedEdges);\r\n  }\r\n\r\n  updateConnectedEdges(nodeId, connectedEdges) {\r\n    const updatedEdges = connectedEdges.map(edge => {\r\n      const edgeToUpdate = Object.assign({}, edge);\r\n      if (edge.from.connectionPointId.split('_')[0] === nodeId) {\r\n        edgeToUpdate.from = this.getUpdatedConnectedSide(edge.from)\r\n      } else {\r\n        edgeToUpdate.to = this.getUpdatedConnectedSide(edge.to);\r\n      }\r\n      return [edgeToUpdate.id, edgeToUpdate];\r\n    });\r\n    \r\n    return new Map(updatedEdges);\r\n  }\r\n\r\n  getUpdatedConnectedSide(edgeSide) {\r\n    //const connectionPoint = document.getElementById(edgeSide.connectionPointId);\r\n    //return this.getConectionPointCoords(edgeSide.connectionPointId, connectionPoint.getBoundingClientRect());\r\n  }\r\n\r\n  getConectionPointCoords(connectionPointId, connectionPointRect) {\r\n    return {\r\n      connectionPointId: connectionPointId,\r\n      x: (Math.floor(connectionPointRect.x - this.canvasElement.current.offsetLeft) + connectionPointRect.width / 2) + window.scrollX + this.canvasScroll.current.scrollLeft,\r\n      y: (Math.floor(connectionPointRect.y - this.canvasElement.current.offsetTop) + connectionPointRect.height / 2) + window.scrollY\r\n    }\r\n  }\r\n \r\n  setOffsetInsideNode(pageX, pageY, node) {\r\n    const draggedNodeId = node.dataset.id;\r\n    const draggedNode = this.props.nodes.find(node => node.id === draggedNodeId);\r\n    draggedNode.internalOffset = {\r\n      x: (pageX - this.canvasElement.current.offsetLeft) - draggedNode.position.x,\r\n      y: (pageY - this.canvasElement.current.offsetTop) - draggedNode.position.y\r\n    };\r\n  }\r\n\r\n  getNewNodePosition(nodeId, pageX, pageY) { \r\n    const draggedNode = this.props.nodes.find(node => node.id === nodeId);\r\n    \r\n    let newPositionX = pageX - this.canvasElement.current.offsetLeft - draggedNode.internalOffset.x;\r\n    let newPositionY = pageY - this.canvasElement.current.offsetTop - draggedNode.internalOffset.y;\r\n\r\n    newPositionX = newPositionX < 0 ? 0 : newPositionX;\r\n    newPositionY = newPositionY < 0 ? 0 : newPositionY;\r\n\r\n    return { x: newPositionX, y: newPositionY };\r\n  }\r\n  \r\n  deleteConnectedEdges(node) {\r\n    const nodeId = node.dataset.id;\r\n    const connectedEdges = this.props.edges.filter(edge => \r\n      edge.from.connectionPointId.split('_')[0] === nodeId || edge.to.connectionPointId.split('_')[0] === nodeId);\r\n    \r\n    if (connectedEdges.length === 0) return;\r\n    \r\n    const connectedEdgeIds = connectedEdges.map(edge => edge.id);\r\n    //this.props.onEdgeDelete(connectedEdgeIds);\r\n    this.setState({ lastDeletedNode: null });\r\n  }\r\n\r\n  getCursorPosition(mouseX, mouseY, targetElement) {\r\n    return {\r\n      x: mouseX - targetElement.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: mouseY - targetElement.offsetTop\r\n    }\r\n  }\r\n\r\n  setLastTouchedNode(node) {\r\n    this.setState({ lastChangedNode: node });\r\n  }\r\n  \r\n  closeNodesContextMenu() {\r\n    this.props.nodes.map(node => node.isContextMenuOpen = false);\r\n  }\r\n\r\n  openNodeContextMenu(nodeId) {\r\n    const node = this.props.nodes.find(node => node.id === nodeId);\r\n    node.isContextMenuOpen = true;\r\n  }\r\n\r\n  openContextMenu(cursorPosition) {\r\n    this.setState({\r\n      isContextMenuOpen: true,\r\n      contextMenuPositionX: cursorPosition.x,\r\n      contextMenuPositionY: cursorPosition.y\r\n    });\r\n  }\r\n\r\n  closeEdgeContextMenu() {\r\n    this.setState({\r\n      isEdgeMenuOpen: false\r\n    });\r\n  }\r\n\r\n  openEdgeContextMenu(edgeId, x, y) {\r\n    const menuPosition = {\r\n      x: x - this.canvasElement.current.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: y - this.canvasElement.current.offsetTop\r\n    };\r\n\r\n    this.setState({\r\n      edgeMenuPosition: menuPosition,\r\n      isEdgeMenuOpen: true,\r\n      edgeId: edgeId\r\n    });\r\n  }\r\n\r\n  closeCanvasContextMenu() {\r\n    this.setState({ isContextMenuOpen: false });\r\n  }\r\n\r\n  handleOpenEditStage(e) {\r\n    const nodeId = e.target.dataset.id;\r\n    this.setState({ editStageId: nodeId })\r\n  }\r\n\r\n  handleCloseEditStage() {\r\n    this.setState({ editStageId: null });\r\n  }\r\n\r\n  handleChangeStatus(stageId, status) {\r\n    this.props.onChangeStatus(stageId, status);\r\n  }\r\n\r\n  render() {\r\n    const maxWidth = window.innerWidth - 30;\r\n\r\n    return (\r\n      <>\r\n      <CaptionPass mapId={this.props.id} title={this.props.title} description={this.props.description}/>\r\n      <div ref={this.canvasWrapper} style={{width: zoneSize * 9, margin: '0 auto', maxWidth: maxWidth}}>\r\n        <div ref={this.canvasScroll} className='canvas-scroll' style={{maxWidth: maxWidth, overflow: 'auto'}}>\r\n          <div \r\n            className='canvas' \r\n            style={{height: zoneSize * 3}}\r\n            data-allow-context-menu=\"true\"\r\n            ref={this.canvasElement}\r\n            onContextMenu={this.handleContextMenu}\r\n            onClick={this.handleClick}\r\n            onMouseDown={this.handleMouseDown}\r\n            onMouseUp={this.handleMouseUp}\r\n            onMouseMove={this.handleMouseMove}\r\n            >  \r\n            <ContextMenu \r\n              isOpen={this.state.isContextMenuOpen} \r\n              positionX={this.state.contextMenuPositionX} \r\n              positionY={this.state.contextMenuPositionY} \r\n              handleClickCreateNode={this.handleClickCreateNode}\r\n            />\r\n            <EdgeContextMenu\r\n              edgeId={this.state.edgeId}\r\n              isOpen={this.state.isEdgeMenuOpen}\r\n              positionX={this.state.edgeMenuPosition.x}\r\n              positionY={this.state.edgeMenuPosition.y}\r\n              onDelete={this.handleDeleteEdge}\r\n            />\r\n            {this.props.nodes.map((node) => (\r\n              <StagePassing\r\n                key={node.id}\r\n                id={node.id}\r\n                title={node.data.title}\r\n                color={node.data.color}\r\n                status={node.data.status}\r\n                position={node.position}\r\n                setLastTouchedNode={this.setLastTouchedNode}\r\n                openEditStage={this.handleOpenEditStage}\r\n              />\r\n            ))}\r\n            {this.props.edges.map((edge) => (\r\n              <Edge \r\n                key={edge.id}\r\n                id={edge.id}\r\n                isShown={true}\r\n                width={1.1}\r\n                type={'curve'}\r\n                from={edge.from}\r\n                to={edge.to}\r\n              />\r\n            ))}\r\n          </div>\r\n          {\r\n            this.state.editStageId ? \r\n            <Modal>\r\n              <Modal.PassStage\r\n                id={this.state.editStageId}\r\n                onChangeStatus={this.handleChangeStatus}\r\n                okButtonName='Close'\r\n                onOk={this.handleCloseEditStage}\r\n              />\r\n            </Modal> : null\r\n          } \r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class KeyStrokeHandler extends React.Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyUp.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyUp);\r\n  }\r\n\r\n  handleKeyUp(e) {\r\n    if (!this.isCtrlSPressed(e)) return;\r\n\r\n    e.preventDefault();\r\n    console.log(this.props.canvas);\r\n\r\n    const canvas = this.props.canvas;\r\n    canvas.nodes = this.props.nodes;\r\n    canvas.edges = this.props.edges;\r\n\r\n    this.saveCanvas(`canvas/${this.props.canvas.id}`, canvas)\r\n      .then(response => console.log(response))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  isCtrlSPressed(event) {\r\n    if (event.ctrlKey && event.key === 's') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  async saveCanvas(canvasUrl, canvas) {\r\n    return fetch(canvasUrl, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(canvas)\r\n    })\r\n      .then(responce => responce.json());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='hey-stroke-handler'>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './CommentsHeader.css'\r\n\r\nexport default function CommentsHeader(props) {\r\n\r\n\treturn (\r\n\t\t<div className='comments-header'>\r\n\t\t\t<div className='comments-header-block'>\r\n\t\t\t\t<h2 className='comments-header-title'>🗨️ Comments</h2>\r\n\t\t\t\t<h4 className='comments-count'>{props.count} comments</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport './AddComment.css';\r\nimport { processEntity } from \"../../../api/api\";\r\n\r\nexport default function AddComment(props) {\r\n\tconst avatarRef = useRef();\r\n\tconst inputRef = useRef();\r\n\tconst [commentText, setCommentText] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tprocessEntity('GET', `/user/you/avatar`)\r\n\t\t  .then(response => response.json())\r\n\t\t  .then(avatar => avatarRef.current.src = avatar)\r\n\t\t  .catch(error => console.error(error))\r\n\t}, []);\r\n\r\n\tconst saveComment = () => {\r\n\t\tconst comment = { text: commentText };\r\n\r\n\t\tprocessEntity('POST', `/maps/${props.mapId}/comment`, comment)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(newComment => props.onCommentAdd(newComment))\r\n\t\t\t.then(() => inputRef.current.value = '')\r\n\t\t\t.catch(e => console.error(e));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"add-comment\">\r\n\t\t\t<main className=\"add-comment-body\">\r\n\t\t\t\t<div className=\"add-comment-avatar\">\r\n\t\t\t\t\t<img className='add-comment-avatar-img' ref={avatarRef} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<textarea ref={inputRef} className=\"add-comment-field\" onChange={e => setCommentText(e.target.value)}></textarea>\r\n\t\t\t</main>\r\n\t\t\t<footer className=\"add-comment-footer\">\r\n\t\t\t\t<input className=\"add-comment-button\" type=\"button\" onClick={saveComment} value='Add comment' />\r\n\t\t\t</footer>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect, useRef } from \"react\";\r\nimport './Comment.css';\r\nimport { processEntity } from \"../../../api/api\";\r\n\r\nexport default function Comment(props) {\r\n\tconst avatarRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tprocessEntity('GET', `/user/${props.commentData.user._id}/avatar`)\r\n\t\t  .then(response => response.json())\r\n\t\t  .then(avatar => avatarRef.current.src = avatar)\r\n\t\t  .catch(error => console.error(error))\r\n\t}, []);\r\n\r\n\tconst handleLike = () => {\r\n\t\talert('In progress ...');\r\n\t}\r\n\r\n\tconst handleReply = () => {\r\n\t\talert('In progress ...');\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"comment\">\r\n\t\t\t<div className=\"comment-avatar\">\r\n\t\t\t\t<img className='comment-avatar-img' ref={avatarRef} />\r\n\t\t\t</div>\r\n\t\t\t<main className=\"comment-main\">\r\n\t\t\t\t<div className=\"comment-main-header\">\r\n\t\t\t\t\t<h4 className=\"comment-username\">\r\n\t\t\t\t\t\t{props.commentData.user.username}\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<div className=\"comment-date\">\r\n\t\t\t\t\t\t{ props.commentData.date }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"comment-text\">\r\n\t\t\t\t\t{ props.commentData.text }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"comment-footer\">\r\n\t\t\t\t\t<div className=\"comment-like\" onClick={handleLike}>♡ 1</div>\r\n\t\t\t\t\t<div className=\"comment-reply\" onClick={handleReply}>Reply</div>\r\n\t\t\t\t\t{ props.isMy ? (\r\n\t\t\t\t\t\t<div onClick={() => props.onDelete(props.commentData._id)} className=\"comment-delete\">Delete</div>\r\n\t\t\t\t\t) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Comments.css';\r\nimport { processEntity } from '../../../api/api.js';\r\nimport CommentsHeader from '../comments-header/CommentsHeader';\r\nimport AddComment from '../add-comment/AddComment';\r\nimport Comment from '../comment/Comment';\r\n\r\nexport default function Comments(props) {\r\n\tconst [myComments, setMyComments] = useState([]);\r\n\tconst [othersComments, setOthersComments] = useState([]);\r\n\tconst [commentsCount, setCommentsCount] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tprocessEntity('GET', `/maps/${props.mapId}/comments`)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(comments => setComments(comments))\r\n\t\t\t.catch(err => console.error(err));\r\n\t}, []);\r\n\r\n\tconst setComments = (comments) => {\r\n\t\tsetMyComments(comments.my);\r\n\t\tsetOthersComments(comments.others);\r\n\t\tsetCommentsCount(comments.my.length + comments.others.length);\r\n\t}\r\n\r\n\tconst handleAddComment = (newComment) => {\r\n\t\tsetMyComments([newComment, ...myComments]);\r\n\t\tsetCommentsCount(commentsCount + 1);\r\n\t}\r\n\r\n\tconst handleDelete = (id) => {\r\n\t\tprocessEntity('DELETE', `/maps/${props.mapId}/comment/${id}`)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(comment => {\r\n\t\t\t\tdeleteMyComment(id);\r\n\t\t\t\tsetCommentsCount(commentsCount - 1);\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err));\r\n\t}\r\n\r\n\tconst deleteMyComment = (id) => {\r\n\t\tconst commentToDeleteIndex = myComments.findIndex(comment => comment._id === id);\r\n\t\tmyComments.splice(commentToDeleteIndex, 1);\r\n\t\tsetMyComments([...myComments]);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section className='comments-section'>\r\n\t\t\t<div className='comments-container'>\r\n\t\t\t\t<CommentsHeader count={commentsCount} />\r\n\t\t\t\t<AddComment onCommentAdd={handleAddComment} mapId={props.mapId} />\r\n\t\t\t\t{myComments.map((comment, index) => (\r\n\t\t\t\t\t<Comment key={index} isMy={true} commentData={comment} onDelete={handleDelete}/>\r\n\t\t\t\t))}\r\n\t\t\t\t{othersComments.map((comment, index) => (\r\n\t\t\t\t\t<Comment key={index} commentData={comment} />\r\n\t\t\t\t))}\r\n\t\t\t</div> \r\n\t\t</section>\r\n\t)\r\n}","import React, { Component } from 'react';\r\nimport MapPassing from '../../canvas/MapPassing.js';\r\nimport KeyStrokeHandler from  './KeyStrokeHandler.js';\r\nimport { processEntity } from '../../api/api.js';\r\nimport Loader from \"../ui/loader/Loader\";\r\nimport Comments from '../ui/comments/Comments.js';\r\n\r\nexport default class MapPassingStateProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      canvasId: this.props.canvasId,\r\n      nodes: [],\r\n      edges: [],\r\n      loading: true\r\n    }\r\n\r\n    const changeStageStatus = this.changeStageStatus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    processEntity('GET', `/maps/${this.state.canvasId}`)\r\n      .then(response => response.json())\r\n      .then(canvas =>\r\n        this.setState({\r\n          canvas: canvas,\r\n          nodes: canvas.stages || [],\r\n          edges: canvas.connections || []\r\n        })\r\n      )\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.loading) return <Loader/>;\r\n\r\n    return (\r\n      <div style={{backgroundColor: '#f9fafb'}}>\r\n        <KeyStrokeHandler canvas={this.state.canvas} nodes={this.state.nodes} edges={this.state.edges} >\r\n            <MapPassing\r\n                id={this.state.canvasId}\r\n                title={this.state?.canvas?.name}\r\n                description={this.state?.canvas?.description}\r\n                nodes={this.state.nodes}\r\n                edges={this.state.edges}\r\n                onChangeStatus={this.changeStageStatus}\r\n            />\r\n        </KeyStrokeHandler>\r\n        <Comments mapId={this.props.canvasId} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  changeStageStatus(stageId, status) {\r\n    const stage = this.nodes.find(node => node.id === stageId);\r\n    stage.data.status = status;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Caption.css';\r\n\r\nexport default function CaptionView(props) {\r\n  return (\r\n      <div className='canvas-header-container'>\r\n        <header className='canvas-header'>\r\n          <div className='header-about'>\r\n            <div className='header-title'>{props.title || 'Title'}</div>\r\n            <div className='header-description'>{props.description || 'Some description'}</div>\r\n          </div>\r\n          <div className='header-actions'>\r\n            <input className='header-nav-button' type='button' value='← Roadmaps' />\r\n            <input className='header-nav-button' type='button' value='🖫 Save' />\r\n          </div>\r\n        </header>\r\n      </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './StageView.css';\r\nimport TitleView from  './title/TitleView';\r\n\r\nconst minWidth = 5;\r\nconst hoverBorder = 1;\r\n\r\nexport default class StageView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      width: minWidth + 'px',\r\n      isConnectionPointsShown: false,\r\n      color: this.props.color,\r\n      isHover: false\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setSize = this.setSize.bind(this);\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n  }\r\n\r\n  handleClick(e) { \r\n    this.props.openEditStage(e);\r\n  }\r\n\r\n  setSize(inputElement) {\r\n    const titleLines = inputElement.value.split('\\n');\r\n    const mostLongLine = titleLines.sort((a, b) => b.length - a.length)[0];\r\n    const fontDescription = this.getFontDescriptor(inputElement);\r\n    const textWidth = this.getTextWidth(mostLongLine, fontDescription);\r\n\r\n    this.setState({\r\n      width: minWidth + textWidth + 'px',\r\n      rows: titleLines.length\r\n    });\r\n\r\n    this.props.setLastTouchedNode(inputElement.closest('.node'));\r\n  }\r\n\r\n  getTextWidth(text, font) {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext(\"2d\");\r\n    context.font = font;\r\n    const metrics = context.measureText(text);\r\n    return metrics.width;\r\n  }\r\n\r\n  getFontDescriptor(element) {\r\n    const fontWeight = getComputedStyle(element).getPropertyValue(\"font-weight\");\r\n    const fontSize = getComputedStyle(element).getPropertyValue(\"font-size\");\r\n    const fontFamily = getComputedStyle(element).getPropertyValue(\"font-family\");\r\n    return fontWeight + ' ' + fontSize + ' ' + fontFamily; \r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    this.setState({ isHover: true });\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    this.setState({ isHover: false });\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      left: this.state.isHover ? this.props.position.x - hoverBorder : this.props.position.x,\r\n      top:  this.state.isHover ? this.props.position.y - hoverBorder : this.props.position.y,\r\n      backgroundColor: this.props.color,\r\n      width: this.state.width,\r\n      zIndex: this.props.isContextMenuOpen ? '4000' : '1000'\r\n    };\r\n\r\n    return (\r\n      <div data-id={this.props.id} className='stage-view' style={style} data-allow-context-menu \r\n        onClick={this.handleClick}\r\n        onChange={this.handleChangeColor}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n      >\r\n        <TitleView\r\n          stageId={this.props.id}\r\n          text={this.props.title}\r\n          rows={this.state.rows}\r\n          initSize={this.setSize}\r\n          backgroundColor={this.props.color}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Canvas.css';\r\nimport CaptionView from './tree/caption/CaptionView';\r\nimport Edge from './tree/edge/Edge';\r\nimport ContextMenu from './tree/context-menu/ContextMenu';\r\nimport {increaseCanvas, decreaseCanvas, initCanvasSize, zoneSize} from './services/resize-service/ResizeService.js';\r\nimport EdgeContextMenu from \"./tree/context-menu/edge-contex-menu/EdgeContextMenu\";\r\nimport Modal from '../components/ui/modal/Modal';\r\nimport StageView from './tree/node/StageView';\r\n\r\nexport default class MapVeiwer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isContextMenuOpen: false,\r\n      isEdgeMenuOpen: false,\r\n      editStageId: null,\r\n      edgeMenuPosition: {x: 0, y: 0},\r\n      isEdgeCreating: false,\r\n      isSizeInit: false,\r\n      demoEdgeFrom: {x: 0, y: 0},\r\n      demoEdgeTo: {x: 0, y: 0},\r\n    };\r\n    \r\n    this.canvasWrapper = React.createRef();\r\n    this.canvasElement = React.createRef();\r\n    this.canvasScroll = React.createRef();\r\n\r\n    this.handleContextMenu = this.handleContextMenu.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClickCreateNode = this.handleClickCreateNode.bind(this);\r\n    this.handleDeleteNode = this.handleDeleteNode.bind(this);\r\n    this.handleDragStart = this.handleDragStart.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.setLastTouchedNode = this.setLastTouchedNode.bind(this);\r\n    this.openEdgeContextMenu = this.openEdgeContextMenu.bind(this);\r\n    this.handleDeleteEdge = this.handleDeleteEdge.bind(this);\r\n    this.handleChangeColor = this.handleChangeColor.bind(this);\r\n    this.handleOpenEditStage = this.handleOpenEditStage.bind(this);\r\n    this.handleCloseEditStage = this.handleCloseEditStage.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //stub #1\r\n    const {height, width} = initCanvasSize(this.canvasElement.current, this.props.nodes);  \r\n    this.updateCanvasSize(height, width);\r\n    //----\r\n    if (!this.state.isSizeInit && this.state.lastChangedNode) {\r\n      const {height, width} = initCanvasSize(this.canvasElement.current, this.props.nodes);\r\n      \r\n      this.updateCanvasSize(height, width);\r\n      this.setState({ isSizeInit: true });\r\n    }\r\n    if (this.state.lastChangedNode) {\r\n      this.rerenderConnectedEdges(this.state.lastChangedNode);\r\n      this.handleDecreaseCanvas();\r\n      \r\n      this.setState({ lastChangedNode: null });\r\n    }\r\n    if (this.state.lastDeletedNode) {\r\n      this.deleteConnectedEdges(this.state.lastDeletedNode);\r\n    }\r\n  }\r\n\r\n  handleContextMenu(e) {\r\n    /* because stub #1 for component without stages\r\n    e.preventDefault();\r\n    this.closeAllContextMenu();\r\n\r\n    if (!e.target.dataset.allowContextMenu) return;\r\n\r\n    if (e.target.classList.contains('canvas')) {\r\n      this.openContextMenu(this.getCursorPosition(e.pageX, e.pageY, e.target));\r\n    }\r\n    if (e.target.classList.contains('node')) {\r\n      this.openNodeContextMenu(e.target.dataset.id);\r\n    }\r\n    if (e.target.classList.contains('edge')) {\r\n      this.openEdgeContextMenu(e.target.dataset.id, e.pageX, e.pageY);\r\n    }\r\n    */\r\n  }\r\n\r\n  closeAllContextMenu() {\r\n    this.closeNodesContextMenu();\r\n    this.closeCanvasContextMenu();\r\n    this.closeEdgeContextMenu();\r\n  }\r\n\r\n  handleClick(e) {\r\n    //this.closeAllContextMenu(); //stub #1\r\n  }\r\n\r\n  handleChangeColor(nodeId, color) {\r\n    //this.props.onNodeChange(nodeId, \"data.color\", color);\r\n  }\r\n\r\n  handleDragStart(e) {\r\n    if (e.target.classList.contains('connection-point')) return;\r\n    if (e.target.classList.contains('node-title')) return;\r\n    if (e.target.classList.contains('menu-point')) return;\r\n\r\n    this.setOffsetInsideNode(e.pageX, e.pageY, e.target);\r\n  }\r\n\r\n  handleDrag(e) {\r\n    const draggingNode = e.target;\r\n    this.increaseCanvas(this.canvasElement.current, this.canvasScroll.current, draggingNode, e.pageX, e.pageY);\r\n  }\r\n\r\n  handleDragEnd(e) {\r\n    if (e.target.classList.contains('node-title')) return;\r\n    const draggedNode = e.target;\r\n    const draggedNodeId = e.target.dataset.id;\r\n    \r\n    this.setState({ isEdgeCreating: false });\r\n    this.setState({ lastChangedNode: draggedNode });\r\n    \r\n    const position = this.getNewNodePosition(draggedNodeId, e.pageX, e.pageY);\r\n    //this.props.onNodeChange(draggedNodeId, \"position\", position);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    if (!e.target.classList.contains('connection-point')) return;\r\n    const connectionPointId = e.target.getAttribute('id');\r\n    const connectionPointRect = e.target.getBoundingClientRect();\r\n    this.showDemoEdge(connectionPointId, connectionPointRect);\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    if (!this.state.isEdgeCreating) return;\r\n    this.updateDemoEdge(e.pageX, e.pageY);\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    if (!this.state.isEdgeCreating) return;\r\n    if (!e.target.classList.contains('connection-point')) {\r\n      this.setState({ isEdgeCreating: false });\r\n      return;\r\n    }\r\n    const connectionPointElement = e.target;\r\n    this.createEdge(connectionPointElement);\r\n    this.setState({ isEdgeCreating: false });\r\n  }\r\n\r\n  handleClickCreateNode(e) {\r\n    const cursorPosition = this.getCursorPosition(e.pageX, e.pageY, e.target);\r\n    const posXInsideCanvas = cursorPosition.x - this.canvasElement.current.offsetLeft;\r\n    const posYInsideCanvas = cursorPosition.y - this.canvasElement.current.offsetTop;\r\n    \r\n    //this.props.onNodeAdd({ x: posXInsideCanvas, y: posYInsideCanvas }, this.canvasScroll.current);\r\n  }\r\n\r\n  handleDeleteNode(e) {\r\n    const nodeElement = e.target.closest('.node');\r\n\r\n    //this.props.onNodeDelete(nodeElement.dataset.id);\r\n    this.setState({ lastDeletedNode: nodeElement });\r\n  }\r\n\r\n  handleDeleteEdge(edgeId) {\r\n    //this.props.onEdgeDelete([edgeId]);\r\n  }\r\n\r\n  handleUpdateTitle(e) {\r\n    const nodeId = e.target.closest('.node').dataset.id;\r\n    const newTitle = e.target.value;\r\n    \r\n    //this.props.onNodeChange(nodeId, \"data.title\", newTitle);\r\n  }\r\n\r\n  increaseCanvas(canvasElement, canvasScroll, draggingNode, pageX, pageY) {\r\n    const {height, width} = increaseCanvas(canvasElement, canvasScroll, draggingNode, pageX, pageY);\r\n    this.updateCanvasSize(height, width);\r\n  }\r\n\r\n  handleDecreaseCanvas() {\r\n    const {height, width} = decreaseCanvas(this.canvasElement.current, this.props.nodes);\r\n    this.updateCanvasSize(height, width);\r\n  }\r\n\r\n  updateCanvasSize(height, width) {\r\n    this.canvasElement.current.style.height = height + 'px';\r\n    this.canvasElement.current.style.width = width + 'px';\r\n    this.canvasWrapper.current.style.width = width + 'px';\r\n  }\r\n\r\n  createEdge(connectionPointElement) {\r\n    const connectionPointId = connectionPointElement.getAttribute('id');\r\n    const connectionPointRect = connectionPointElement.getBoundingClientRect();\r\n    \r\n    const demoEdgeTo = this.getConectionPointCoords(connectionPointId, connectionPointRect);\r\n    \r\n    if (this.state.demoEdgeFrom.x === demoEdgeTo.x) return;\r\n\r\n    //this.props.onEdgeAdd(this.state.demoEdgeFrom, demoEdgeTo);\r\n  }\r\n\r\n  showDemoEdge(connectionPointId, connectionPointRect) {\r\n    const demoEdgeFrom = this.getConectionPointCoords(connectionPointId, connectionPointRect);\r\n    this.setState({\r\n      demoEdgeFrom: demoEdgeFrom,\r\n      demoEdgeTo: demoEdgeFrom,\r\n      isEdgeCreating: true\r\n    });\r\n  }\r\n\r\n  updateDemoEdge(mouseX, mouseY) {\r\n    const demoEdgeTo = {\r\n      x: mouseX - this.canvasElement.current.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: mouseY - this.canvasElement.current.offsetTop\r\n    };\r\n    this.setState({ demoEdgeTo: demoEdgeTo });\r\n  }\r\n\r\n  rerenderConnectedEdges(nodeElement) {\r\n    const nodeId = nodeElement.dataset.id;\r\n    const connectedEdges = this.props.edges.filter(edge => \r\n      edge.from.connectionPointId.split('_')[0] === nodeId || edge.to.connectionPointId.split('_')[0] === nodeId);\r\n      \r\n    const updatedEdges = this.updateConnectedEdges(nodeId, connectedEdges);\r\n    //this.props.onEdgeChange(updatedEdges);\r\n  }\r\n\r\n  updateConnectedEdges(nodeId, connectedEdges) {\r\n    const updatedEdges = connectedEdges.map(edge => {\r\n      const edgeToUpdate = Object.assign({}, edge);\r\n      if (edge.from.connectionPointId.split('_')[0] === nodeId) {\r\n        edgeToUpdate.from = this.getUpdatedConnectedSide(edge.from)\r\n      } else {\r\n        edgeToUpdate.to = this.getUpdatedConnectedSide(edge.to);\r\n      }\r\n      return [edgeToUpdate.id, edgeToUpdate];\r\n    });\r\n    \r\n    return new Map(updatedEdges);\r\n  }\r\n\r\n  getUpdatedConnectedSide(edgeSide) {\r\n    //const connectionPoint = document.getElementById(edgeSide.connectionPointId);\r\n    //return this.getConectionPointCoords(edgeSide.connectionPointId, connectionPoint.getBoundingClientRect());\r\n  }\r\n\r\n  getConectionPointCoords(connectionPointId, connectionPointRect) {\r\n    return {\r\n      connectionPointId: connectionPointId,\r\n      x: (Math.floor(connectionPointRect.x - this.canvasElement.current.offsetLeft) + connectionPointRect.width / 2) + window.scrollX + this.canvasScroll.current.scrollLeft,\r\n      y: (Math.floor(connectionPointRect.y - this.canvasElement.current.offsetTop) + connectionPointRect.height / 2) + window.scrollY\r\n    }\r\n  }\r\n \r\n  setOffsetInsideNode(pageX, pageY, node) {\r\n    const draggedNodeId = node.dataset.id;\r\n    const draggedNode = this.props.nodes.find(node => node.id === draggedNodeId);\r\n    draggedNode.internalOffset = {\r\n      x: (pageX - this.canvasElement.current.offsetLeft) - draggedNode.position.x,\r\n      y: (pageY - this.canvasElement.current.offsetTop) - draggedNode.position.y\r\n    };\r\n  }\r\n\r\n  getNewNodePosition(nodeId, pageX, pageY) { \r\n    const draggedNode = this.props.nodes.find(node => node.id === nodeId);\r\n    \r\n    let newPositionX = pageX - this.canvasElement.current.offsetLeft - draggedNode.internalOffset.x;\r\n    let newPositionY = pageY - this.canvasElement.current.offsetTop - draggedNode.internalOffset.y;\r\n\r\n    newPositionX = newPositionX < 0 ? 0 : newPositionX;\r\n    newPositionY = newPositionY < 0 ? 0 : newPositionY;\r\n\r\n    return { x: newPositionX, y: newPositionY };\r\n  }\r\n  \r\n  deleteConnectedEdges(node) {\r\n    const nodeId = node.dataset.id;\r\n    const connectedEdges = this.props.edges.filter(edge => \r\n      edge.from.connectionPointId.split('_')[0] === nodeId || edge.to.connectionPointId.split('_')[0] === nodeId);\r\n    \r\n    if (connectedEdges.length === 0) return;\r\n    \r\n    const connectedEdgeIds = connectedEdges.map(edge => edge.id);\r\n    //this.props.onEdgeDelete(connectedEdgeIds);\r\n    this.setState({ lastDeletedNode: null });\r\n  }\r\n\r\n  getCursorPosition(mouseX, mouseY, targetElement) {\r\n    return {\r\n      x: mouseX - targetElement.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: mouseY - targetElement.offsetTop\r\n    }\r\n  }\r\n\r\n  setLastTouchedNode(node) {\r\n    this.setState({ lastChangedNode: node });\r\n  }\r\n  \r\n  closeNodesContextMenu() {\r\n    this.props.nodes.map(node => node.isContextMenuOpen = false);\r\n  }\r\n\r\n  openNodeContextMenu(nodeId) {\r\n    const node = this.props.nodes.find(node => node.id === nodeId);\r\n    node.isContextMenuOpen = true;\r\n  }\r\n\r\n  openContextMenu(cursorPosition) {\r\n    this.setState({\r\n      isContextMenuOpen: true,\r\n      contextMenuPositionX: cursorPosition.x,\r\n      contextMenuPositionY: cursorPosition.y\r\n    });\r\n  }\r\n\r\n  closeEdgeContextMenu() {\r\n    this.setState({\r\n      isEdgeMenuOpen: false\r\n    });\r\n  }\r\n\r\n  openEdgeContextMenu(edgeId, x, y) {\r\n    const menuPosition = {\r\n      x: x - this.canvasElement.current.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: y - this.canvasElement.current.offsetTop\r\n    };\r\n\r\n    this.setState({\r\n      edgeMenuPosition: menuPosition,\r\n      isEdgeMenuOpen: true,\r\n      edgeId: edgeId\r\n    });\r\n  }\r\n\r\n  closeCanvasContextMenu() {\r\n    this.setState({ isContextMenuOpen: false });\r\n  }\r\n\r\n  handleOpenEditStage(e) {\r\n    const nodeId = e.target.dataset.id;\r\n    this.setState({ editStageId: nodeId })\r\n  }\r\n\r\n  handleCloseEditStage() {\r\n    this.setState({ editStageId: null });\r\n  }\r\n\r\n  render() {\r\n    const maxWidth = window.innerWidth - 30;\r\n\r\n    return (\r\n      <>\r\n        <CaptionView title={this.props.title} description={this.props.description}/>\r\n        <div ref={this.canvasWrapper} style={{width: zoneSize * 9, margin: '0 auto', maxWidth: maxWidth}}>\r\n          <div ref={this.canvasScroll} className='canvas-scroll' style={{maxWidth: maxWidth, overflow: 'auto'}}>\r\n            <div \r\n              className='canvas' \r\n              style={{height: zoneSize * 3}}\r\n              data-allow-context-menu=\"true\"\r\n              ref={this.canvasElement}\r\n              onContextMenu={this.handleContextMenu}\r\n              onClick={this.handleClick}\r\n              onMouseDown={this.handleMouseDown}\r\n              onMouseUp={this.handleMouseUp}\r\n              onMouseMove={this.handleMouseMove}\r\n              >  \r\n              <ContextMenu \r\n                isOpen={this.state.isContextMenuOpen} \r\n                positionX={this.state.contextMenuPositionX} \r\n                positionY={this.state.contextMenuPositionY} \r\n                handleClickCreateNode={this.handleClickCreateNode}\r\n              />\r\n              <EdgeContextMenu\r\n                edgeId={this.state.edgeId}\r\n                isOpen={this.state.isEdgeMenuOpen}\r\n                positionX={this.state.edgeMenuPosition.x}\r\n                positionY={this.state.edgeMenuPosition.y}\r\n                onDelete={this.handleDeleteEdge}\r\n              />\r\n              {this.props.nodes.map((node) => (\r\n                <StageView\r\n                  key={node.id}\r\n                  id={node.id}\r\n                  title={node.data.title}\r\n                  color={node.data.color}\r\n                  position={node.position}\r\n                  setLastTouchedNode={this.setLastTouchedNode}\r\n                  openEditStage={this.handleOpenEditStage}\r\n                />\r\n              ))}\r\n              {this.props.edges.map((edge) => (\r\n                <Edge \r\n                  key={edge.id}\r\n                  id={edge.id}\r\n                  isShown={true}\r\n                  width={1.1}\r\n                  type={'curve'}\r\n\r\n                  from={edge.from}\r\n                  to={edge.to}\r\n                />\r\n              ))}\r\n              <Edge \r\n                className='demo-edge' \r\n                isShown={this.state.isEdgeCreating}\r\n                type={'curve'}\r\n                width={1}\r\n                isDashed={true}\r\n                from={this.state.demoEdgeFrom} \r\n                to={this.state.demoEdgeTo}\r\n              />\r\n            </div>\r\n            {\r\n              this.state.editStageId ? \r\n              <Modal>\r\n                <Modal.EditStage\r\n                  id={this.state.editStageId}\r\n                  title = 'Edit Stage'\r\n                  okButtonName='Save'\r\n                  onCancel={this.handleCloseEditStage}\r\n                  onOk={this.handleSaveStageDescription}\r\n                />\r\n              </Modal> : null\r\n            } \r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport MapVeiwer from '../../canvas/MapViewer.js';\r\nimport KeyStrokeHandler from  './KeyStrokeHandler.js';\r\nimport { processEntity } from '../../api/api.js';\r\nimport Loader from \"../ui/loader/Loader\";\r\nimport Comments from '../ui/comments/Comments.js';\r\n\r\nexport default class MapViewerStateProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      canvasId: this.props.canvasId,\r\n      nodes: [],\r\n      edges: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    processEntity('GET', `/maps/${this.state.canvasId}`)\r\n      .then(response => response.json())\r\n      .then(canvas =>\r\n        this.setState({\r\n          canvas: canvas,\r\n          nodes: canvas.stages || [],\r\n          edges: canvas.connections || []\r\n        })\r\n      )\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.loading) return <Loader/>;\r\n\r\n    return (\r\n      <div style={{backgroundColor: '#f9fafb'}}>\r\n        <KeyStrokeHandler canvas={this.state.canvas} nodes={this.state.nodes} edges={this.state.edges} >\r\n            <MapVeiwer\r\n                title={this.state?.canvas?.name}\r\n                description={this.state?.canvas?.description}\r\n                nodes={this.state.nodes}\r\n                edges={this.state.edges}\r\n            />\r\n        </KeyStrokeHandler>\r\n        <Comments mapId={this.props.canvasId} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport './Caption.css';\r\n\r\nexport default function Caption(props) {\r\n  const history = useHistory();\r\n\r\n  const back = () => {\r\n\t\thistory.push(`/map/${props.mapId}/passing`);\r\n\t}\r\n\r\n\tconst save = () => {\r\n\t\thistory.push(`/map/${props.mapId}/passing`);\r\n\t}\r\n\r\n  return (\r\n      <div className='canvas-header-container'>\r\n        <header className='canvas-header'>\r\n          <div className='header-about'>\r\n            <div className='header-title'>{props.title || 'Title'}</div>\r\n            <div className='header-description'>{props.description || 'Some description'}</div>\r\n          </div>\r\n          <div className='header-actions'>\r\n            <input className='header-nav-button' type='button' value='← Back' onClick={back} />\r\n            <input className='header-nav-button' type='button' value='🖫 Save' onClick={save}/>\r\n          </div>\r\n        </header>\r\n      </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Title.css';\r\n\r\nexport default class Title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputElement = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initSize(this.inputElement.current);\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      backgroundColor: this.props.backgroundColor\r\n    };\r\n\r\n    return (\r\n      <textarea ref={this.inputElement}\r\n        className='node-title'\r\n        style={style}\r\n        rows={this.props.rows}\r\n        defaultValue={this.props.text}\r\n        draggable onDragStart={e => e.preventDefault()}\r\n        onChange={this.props.onChangeText}\r\n        onBlur={this.props.handleUpdateTitle}\r\n      />\r\n    )\r\n  }\r\n}\r\n","const nodeColors = ['#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#D4C4FB',\r\n      '#B80000', '#FF9800', '#FCCB00', '#4CAF50', '#006B76', '#1273DE', '#004DCF', '#5300EB',\r\n      '#FFF', 'lightgrey', 'darkgrey', 'grey' ];\r\n\r\nexport {nodeColors};\r\n","import React from 'react';\r\nimport './ColorPicker.css';\r\nimport { nodeColors } from '../../../../config.js';\r\n\r\nexport default class ColorPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: this.props.color\r\n    };\r\n\r\n    this.handleColorValue = this.handleColorValue.bind(this);\r\n  }\r\n\r\n  handleColorValue(e) {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isShown) return null;\r\n\r\n    return (\r\n      <div className='color-picker'>\r\n        {nodeColors.map((color) => (\r\n          <div key={color} className='color-picker-item' style={{backgroundColor: color}}\r\n            title={color} data-color={color}></div>\r\n        ))}\r\n        <span>\r\n          <input className='color-picker-value'\r\n                 type=\"text\"\r\n                 defaultValue={this.props.color}\r\n                 onClick={this.handleColorValue}\r\n          />\r\n        </span>\r\n      </div>    \r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./NodeContextMenu.css\";\r\nimport ColorPicker from './color-picker/ColorPicker';\r\nimport Modal from \"../../../../components/ui/modal/Modal\";\r\n\r\nexport default class NodeContextMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isColorPickerShown: false,\r\n      isEditStageOpen: false\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleSaveStageDescription= this.handleSaveStageDescription.bind(this);\r\n    this.closeEditStage = this.closeEditStage.bind(this);\r\n    this.openEditStage = this.openEditStage.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    if (e.target.classList.contains('color-picker-item')) {\r\n      this.setState({isColorPickerShown: false});\r\n    }\r\n    if ((e.target.classList.contains('menu-point-color'))) {\r\n      e.stopPropagation();\r\n      this.setState({ isColorPickerShown: !this.state.isColorPickerShown });\r\n    }\r\n  }\r\n\r\n  handleSaveStageDescription() {\r\n    alert('save');\r\n  }\r\n\r\n  closeEditStage() {\r\n    this.setState({ isEditStageOpen: false });\r\n  }\r\n\r\n  openEditStage() {\r\n    this.setState({ isEditStageOpen: true });\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isOpen) return null;\r\n\r\n    return (\r\n      <div className='node-context-menu'>\r\n        <div className='menu-point' data-id={this.props.id} onClick={this.props.openEditStage}>🖊️</div>\r\n        <div className='menu-point menu-point-color'\r\n          onClick={this.handleClick}\r\n          draggable onDragStart={e => e.preventDefault()}\r\n        >\r\n          🔵\r\n          <ColorPicker\r\n              isShown={this.state.isColorPickerShown}\r\n              color={this.props.color}\r\n          />\r\n        </div>\r\n        <div className='menu-point' onClick={this.props.handleDeleteNode}>✖️</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ConnectionPoint.css';\r\n\r\nconst attachmentSides = {\r\n  top: {\r\n    left: '50% - 100px',\r\n    top: '-2%'\r\n  },\r\n  right: {\r\n    left: '100%',\r\n    top: '50%'\r\n  },\r\n  bottom: {\r\n    left: '50%',\r\n    top: '100%'\r\n  },\r\n  left: {\r\n    left: '0%',\r\n    top: '50%'\r\n  }\r\n};\r\n\r\nexport default class ConnectionPoint extends React.Component {\r\n  render() {\r\n    const style = {\r\n      top: attachmentSides[this.props.attachmentSide].top,\r\n      left: attachmentSides[this.props.attachmentSide].left\r\n    };\r\n\r\n    return(\r\n      <div id={this.props.id} className='connection-point' style={style}\r\n           draggable onDragStart={e => e.preventDefault()}>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ConnectionPoint from './connecting-point/ConnectionPoint';\r\n\r\nexport default class ConnectingPoints extends React.Component {\r\n  render() {\r\n    const style = {\r\n      visibility: this.props.isShown ? 'visible' : 'hidden'\r\n    };\r\n\r\n    return(\r\n      <div style={style}>\r\n        <ConnectionPoint id={this.props.nodeId + \"_1\"} attachmentSide='top'/>\r\n        <ConnectionPoint id={this.props.nodeId + \"_2\"} attachmentSide='right'/>\r\n        <ConnectionPoint id={this.props.nodeId + \"_3\"} attachmentSide='bottom'/>\r\n        <ConnectionPoint id={this.props.nodeId + \"_4\"} attachmentSide='left'/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Node.css';\r\nimport Title from  './title/Title';\r\nimport NodeContextMenu from '../context-menu/node-context-menu/NodeContextMenu';\r\nimport ConnectingPoints from './connecting-points/ConnectingPoints';\r\n\r\nconst minWidth = 5;\r\n\r\nexport default class Node extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 1,\r\n      width: minWidth + 'px',\r\n      isConnectionPointsShown: false,\r\n      color: this.props.color\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\r\n    this.setSize = this.setSize.bind(this);\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n    this.handleChangeColor = this.handleChangeColor.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    if (e.target.classList.contains('color-picker-item')) {\r\n      this.setState({ isConnectionPointsShown: false });\r\n      this.props.onColorChange(this.props.id, e.target.dataset.color);\r\n    }\r\n  }\r\n\r\n  handleChangeColor(e) {\r\n    if (e.target.classList.contains('color-picker-value')) {\r\n      console.log(e.target.value);\r\n      this.setState({ isConnectionPointsShown: false });\r\n      this.props.onColorChange(this.props.id, e.target.value);\r\n    }\r\n  }\r\n\r\n  handleChangeTitle(e) {\r\n    const inputElement = e.target;\r\n    this.setSize(inputElement);\r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    this.toggleConnectiongPoints(true);\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    this.toggleConnectiongPoints(false);\r\n  }\r\n\r\n  setSize(inputElement) {\r\n    const titleLines = inputElement.value.split('\\n');\r\n    const mostLongLine = titleLines.sort((a, b) => b.length - a.length)[0];\r\n    const fontDescription = this.getFontDescriptor(inputElement);\r\n    const textWidth = this.getTextWidth(mostLongLine, fontDescription);\r\n\r\n    this.setState({\r\n      width: minWidth + textWidth + 'px',\r\n      rows: titleLines.length\r\n    });\r\n\r\n    this.props.setLastTouchedNode(inputElement.closest('.node'));\r\n  }\r\n\r\n  getTextWidth(text, font) {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext(\"2d\");\r\n    context.font = font;\r\n    const metrics = context.measureText(text);\r\n    return metrics.width;\r\n  }\r\n\r\n  getFontDescriptor(element) {\r\n    const fontWeight = getComputedStyle(element).getPropertyValue(\"font-weight\");\r\n    const fontSize = getComputedStyle(element).getPropertyValue(\"font-size\");\r\n    const fontFamily = getComputedStyle(element).getPropertyValue(\"font-family\");\r\n    return fontWeight + ' ' + fontSize + ' ' + fontFamily; \r\n  }\r\n\r\n  toggleConnectiongPoints(isShown) {\r\n    this.setState({ isConnectionPointsShown: isShown });\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      left: this.props.position.x,\r\n      top: this.props.position.y,\r\n      backgroundColor: this.props.color,\r\n      width: this.state.width,\r\n      zIndex: this.props.isContextMenuOpen ? '4000' : '1000'\r\n    };\r\n\r\n    return (\r\n      <div data-id={this.props.id} className='node' style={style} data-allow-context-menu \r\n        onDoubleClick={this.handleDoubleClick}\r\n        draggable\r\n        onDragStart={this.props.handleDragStart}\r\n        onDrag={this.props.handleDrag}\r\n        onDragEnd={this.props.handleDragEnd}\r\n        onClick={this.handleClick}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n        onChange={this.handleChangeColor}\r\n      >\r\n        <Title\r\n          text={this.props.title}\r\n          rows={this.state.rows}\r\n          initSize={this.setSize}\r\n          onChangeText={this.handleChangeTitle}\r\n          backgroundColor={this.props.color}\r\n          handleUpdateTitle={this.props.handleUpdateTitle}\r\n        />\r\n        <NodeContextMenu\r\n          isOpen={this.props.isContextMenuOpen}\r\n          color={this.props.color}\r\n          handleDeleteNode={this.props.handleDeleteNode}\r\n          openEditStage={this.props.openEditStage}\r\n          {...this.props}\r\n        />\r\n        <ConnectingPoints nodeId={this.props.id} isShown={this.state.isConnectionPointsShown}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Canvas.css';\r\nimport Caption from './tree/caption/Caption';\r\nimport Edge from './tree/edge/Edge';\r\nimport Node from './tree/node/Node';\r\nimport ContextMenu from './tree/context-menu/ContextMenu';\r\nimport {increaseCanvas, decreaseCanvas, initCanvasSize, zoneSize} from './services/resize-service/ResizeService.js';\r\nimport EdgeContextMenu from \"./tree/context-menu/edge-contex-menu/EdgeContextMenu\";\r\nimport Modal from '../components/ui/modal/Modal';\r\n\r\nexport default class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isContextMenuOpen: false,\r\n      isEdgeMenuOpen: false,\r\n      editStageId: null,\r\n      edgeMenuPosition: {x: 0, y: 0},\r\n      isEdgeCreating: false,\r\n      isSizeInit: false,\r\n      demoEdgeFrom: {x: 0, y: 0},\r\n      demoEdgeTo: {x: 0, y: 0},\r\n    };\r\n    \r\n    this.canvasWrapper = React.createRef();\r\n    this.canvasElement = React.createRef();\r\n    this.canvasScroll = React.createRef();\r\n\r\n    this.handleContextMenu = this.handleContextMenu.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleClickCreateNode = this.handleClickCreateNode.bind(this);\r\n    this.handleDeleteNode = this.handleDeleteNode.bind(this);\r\n    this.handleDragStart = this.handleDragStart.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.setLastTouchedNode = this.setLastTouchedNode.bind(this);\r\n    this.openEdgeContextMenu = this.openEdgeContextMenu.bind(this);\r\n    this.handleDeleteEdge = this.handleDeleteEdge.bind(this);\r\n    this.handleChangeColor = this.handleChangeColor.bind(this);\r\n    this.handleOpenEditStage = this.handleOpenEditStage.bind(this);\r\n    this.handleCloseEditStage = this.handleCloseEditStage.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!this.state.isSizeInit && this.state.lastChangedNode) {\r\n      const {height, width} = initCanvasSize(this.canvasElement.current, this.props.nodes);\r\n      \r\n      this.updateCanvasSize(height, width);\r\n      this.setState({ isSizeInit: true });\r\n    }\r\n    if (this.state.lastChangedNode) {\r\n      this.rerenderConnectedEdges(this.state.lastChangedNode);\r\n      this.handleDecreaseCanvas();\r\n      \r\n      this.setState({ lastChangedNode: null });\r\n    }\r\n    if (this.state.lastDeletedNode) {\r\n      this.deleteConnectedEdges(this.state.lastDeletedNode);\r\n    }\r\n  }\r\n\r\n  handleContextMenu(e) {\r\n    e.preventDefault();\r\n    this.closeAllContextMenu();\r\n\r\n    if (!e.target.dataset.allowContextMenu) return;\r\n\r\n    if (e.target.classList.contains('canvas')) {\r\n      this.openContextMenu(this.getCursorPosition(e.pageX, e.pageY, e.target));\r\n    }\r\n    if (e.target.classList.contains('node')) {\r\n      this.openNodeContextMenu(e.target.dataset.id);\r\n    }\r\n    if (e.target.classList.contains('edge')) {\r\n      this.openEdgeContextMenu(e.target.dataset.id, e.pageX, e.pageY);\r\n    }\r\n  }\r\n\r\n  closeAllContextMenu() {\r\n    this.closeNodesContextMenu();\r\n    this.closeCanvasContextMenu();\r\n    this.closeEdgeContextMenu();\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.closeAllContextMenu();\r\n  }\r\n\r\n  handleChangeColor(nodeId, color) {\r\n    this.props.onNodeChange(nodeId, \"data.color\", color);\r\n  }\r\n\r\n  handleDragStart(e) {\r\n    if (e.target.classList.contains('connection-point')) return;\r\n    if (e.target.classList.contains('node-title')) return;\r\n    if (e.target.classList.contains('menu-point')) return;\r\n\r\n    this.setOffsetInsideNode(e.pageX, e.pageY, e.target);\r\n  }\r\n\r\n  handleDrag(e) {\r\n    const draggingNode = e.target;\r\n    this.increaseCanvas(this.canvasElement.current, this.canvasScroll.current, draggingNode, e.pageX, e.pageY);\r\n  }\r\n\r\n  handleDragEnd(e) {\r\n    if (e.target.classList.contains('node-title')) return;\r\n    const draggedNode = e.target;\r\n    const draggedNodeId = e.target.dataset.id;\r\n    \r\n    this.setState({ isEdgeCreating: false });\r\n    this.setState({ lastChangedNode: draggedNode });\r\n    \r\n    const position = this.getNewNodePosition(draggedNodeId, e.pageX, e.pageY);\r\n    this.props.onNodeChange(draggedNodeId, \"position\", position);\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    if (!e.target.classList.contains('connection-point')) return;\r\n    const connectionPointId = e.target.getAttribute('id');\r\n    const connectionPointRect = e.target.getBoundingClientRect();\r\n    this.showDemoEdge(connectionPointId, connectionPointRect);\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    if (!this.state.isEdgeCreating) return;\r\n    this.updateDemoEdge(e.pageX, e.pageY);\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    if (!this.state.isEdgeCreating) return;\r\n    if (!e.target.classList.contains('connection-point')) {\r\n      this.setState({ isEdgeCreating: false });\r\n      return;\r\n    }\r\n    const connectionPointElement = e.target;\r\n    this.createEdge(connectionPointElement);\r\n    this.setState({ isEdgeCreating: false });\r\n  }\r\n\r\n  handleClickCreateNode(e) {\r\n    const cursorPosition = this.getCursorPosition(e.pageX, e.pageY, e.target);\r\n    const posXInsideCanvas = cursorPosition.x - this.canvasElement.current.offsetLeft;\r\n    const posYInsideCanvas = cursorPosition.y - this.canvasElement.current.offsetTop;\r\n    \r\n    this.props.onNodeAdd({ x: posXInsideCanvas, y: posYInsideCanvas }, this.canvasScroll.current);\r\n  }\r\n\r\n  handleDeleteNode(e) {\r\n    const nodeElement = e.target.closest('.node');\r\n\r\n    this.props.onNodeDelete(nodeElement.dataset.id);\r\n    this.setState({ lastDeletedNode: nodeElement });\r\n  }\r\n\r\n  handleDeleteEdge(edgeId) {\r\n    this.props.onEdgeDelete([edgeId]);\r\n  }\r\n\r\n  handleUpdateTitle(e) {\r\n    const nodeId = e.target.closest('.node').dataset.id;\r\n    const newTitle = e.target.value;\r\n    \r\n    this.props.onNodeChange(nodeId, \"data.title\", newTitle);\r\n  }\r\n\r\n  increaseCanvas(canvasElement, canvasScroll, draggingNode, pageX, pageY) {\r\n    const {height, width} = increaseCanvas(canvasElement, canvasScroll, draggingNode, pageX, pageY);\r\n    this.updateCanvasSize(height, width);\r\n  }\r\n\r\n  handleDecreaseCanvas() {\r\n    const {height, width} = decreaseCanvas(this.canvasElement.current, this.props.nodes);\r\n    this.updateCanvasSize(height, width);\r\n  }\r\n\r\n  updateCanvasSize(height, width) {\r\n    this.canvasElement.current.style.height = height + 'px';\r\n    this.canvasElement.current.style.width = width + 'px';\r\n    this.canvasWrapper.current.style.width = width + 'px';\r\n  }\r\n\r\n  createEdge(connectionPointElement) {\r\n    const connectionPointId = connectionPointElement.getAttribute('id');\r\n    const connectionPointRect = connectionPointElement.getBoundingClientRect();\r\n    \r\n    const demoEdgeTo = this.getConectionPointCoords(connectionPointId, connectionPointRect);\r\n    \r\n    if (this.state.demoEdgeFrom.x === demoEdgeTo.x) return;\r\n\r\n    this.props.onEdgeAdd(this.state.demoEdgeFrom, demoEdgeTo);\r\n  }\r\n\r\n  showDemoEdge(connectionPointId, connectionPointRect) {\r\n    const demoEdgeFrom = this.getConectionPointCoords(connectionPointId, connectionPointRect);\r\n    this.setState({\r\n      demoEdgeFrom: demoEdgeFrom,\r\n      demoEdgeTo: demoEdgeFrom,\r\n      isEdgeCreating: true\r\n    });\r\n  }\r\n\r\n  updateDemoEdge(mouseX, mouseY) {\r\n    const demoEdgeTo = {\r\n      x: mouseX - this.canvasElement.current.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: mouseY - this.canvasElement.current.offsetTop\r\n    };\r\n    this.setState({ demoEdgeTo: demoEdgeTo });\r\n  }\r\n\r\n  rerenderConnectedEdges(nodeElement) {\r\n    const nodeId = nodeElement.dataset.id;\r\n    const connectedEdges = this.props.edges.filter(edge => \r\n      edge.from.connectionPointId.split('_')[0] === nodeId || edge.to.connectionPointId.split('_')[0] === nodeId);\r\n      \r\n    const updatedEdges = this.updateConnectedEdges(nodeId, connectedEdges);\r\n    this.props.onEdgeChange(updatedEdges);\r\n  }\r\n\r\n  updateConnectedEdges(nodeId, connectedEdges) {\r\n    const updatedEdges = connectedEdges.map(edge => {\r\n      const edgeToUpdate = Object.assign({}, edge);\r\n      if (edge.from.connectionPointId.split('_')[0] === nodeId) {\r\n        edgeToUpdate.from = this.getUpdatedConnectedSide(edge.from)\r\n      } else {\r\n        edgeToUpdate.to = this.getUpdatedConnectedSide(edge.to);\r\n      }\r\n      return [edgeToUpdate.id, edgeToUpdate];\r\n    });\r\n    \r\n    return new Map(updatedEdges);\r\n  }\r\n\r\n  getUpdatedConnectedSide(edgeSide) {\r\n    const connectionPoint = document.getElementById(edgeSide.connectionPointId);\r\n    return this.getConectionPointCoords(edgeSide.connectionPointId, connectionPoint.getBoundingClientRect());\r\n  }\r\n\r\n  getConectionPointCoords(connectionPointId, connectionPointRect) {\r\n    return {\r\n      connectionPointId: connectionPointId,\r\n      x: (Math.floor(connectionPointRect.x - this.canvasElement.current.offsetLeft) + connectionPointRect.width / 2) + window.scrollX + this.canvasScroll.current.scrollLeft,\r\n      y: (Math.floor(connectionPointRect.y - this.canvasElement.current.offsetTop) + connectionPointRect.height / 2) + window.scrollY\r\n    }\r\n  }\r\n \r\n  setOffsetInsideNode(pageX, pageY, node) {\r\n    const draggedNodeId = node.dataset.id;\r\n    const draggedNode = this.props.nodes.find(node => node.id === draggedNodeId);\r\n    draggedNode.internalOffset = {\r\n      x: (pageX - this.canvasElement.current.offsetLeft) - draggedNode.position.x,\r\n      y: (pageY - this.canvasElement.current.offsetTop) - draggedNode.position.y\r\n    };\r\n  }\r\n\r\n  getNewNodePosition(nodeId, pageX, pageY) { \r\n    const draggedNode = this.props.nodes.find(node => node.id === nodeId);\r\n    \r\n    let newPositionX = pageX - this.canvasElement.current.offsetLeft - draggedNode.internalOffset.x;\r\n    let newPositionY = pageY - this.canvasElement.current.offsetTop - draggedNode.internalOffset.y;\r\n\r\n    newPositionX = newPositionX < 0 ? 0 : newPositionX;\r\n    newPositionY = newPositionY < 0 ? 0 : newPositionY;\r\n\r\n    return { x: newPositionX, y: newPositionY };\r\n  }\r\n  \r\n  deleteConnectedEdges(node) {\r\n    const nodeId = node.dataset.id;\r\n    const connectedEdges = this.props.edges.filter(edge => \r\n      edge.from.connectionPointId.split('_')[0] === nodeId || edge.to.connectionPointId.split('_')[0] === nodeId);\r\n    \r\n    if (connectedEdges.length === 0) return;\r\n    \r\n    const connectedEdgeIds = connectedEdges.map(edge => edge.id);\r\n    this.props.onEdgeDelete(connectedEdgeIds);\r\n    this.setState({ lastDeletedNode: null });\r\n  }\r\n\r\n  getCursorPosition(mouseX, mouseY, targetElement) {\r\n    return {\r\n      x: mouseX - targetElement.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: mouseY - targetElement.offsetTop\r\n    }\r\n  }\r\n\r\n  setLastTouchedNode(node) {\r\n    this.setState({ lastChangedNode: node });\r\n  }\r\n  \r\n  closeNodesContextMenu() {\r\n    this.props.nodes.map(node => node.isContextMenuOpen = false);\r\n  }\r\n\r\n  openNodeContextMenu(nodeId) {\r\n    const node = this.props.nodes.find(node => node.id === nodeId);\r\n    node.isContextMenuOpen = true;\r\n  }\r\n\r\n  openContextMenu(cursorPosition) {\r\n    this.setState({\r\n      isContextMenuOpen: true,\r\n      contextMenuPositionX: cursorPosition.x,\r\n      contextMenuPositionY: cursorPosition.y\r\n    });\r\n  }\r\n\r\n  closeEdgeContextMenu() {\r\n    this.setState({\r\n      isEdgeMenuOpen: false\r\n    });\r\n  }\r\n\r\n  openEdgeContextMenu(edgeId, x, y) {\r\n    const menuPosition = {\r\n      x: x - this.canvasElement.current.offsetLeft + this.canvasScroll.current.scrollLeft,\r\n      y: y - this.canvasElement.current.offsetTop\r\n    };\r\n\r\n    this.setState({\r\n      edgeMenuPosition: menuPosition,\r\n      isEdgeMenuOpen: true,\r\n      edgeId: edgeId\r\n    });\r\n  }\r\n\r\n  closeCanvasContextMenu() {\r\n    this.setState({ isContextMenuOpen: false });\r\n  }\r\n\r\n  handleOpenEditStage(e) {\r\n    const nodeId = e.target.dataset.id;\r\n    this.setState({ editStageId: nodeId })\r\n  }\r\n\r\n  handleCloseEditStage() {\r\n    this.setState({ editStageId: null });\r\n  }\r\n\r\n  render() {\r\n    const maxWidth = window.innerWidth - 30;\r\n\r\n    return (\r\n      <>\r\n      <Caption mapId={this.props.id} title={this.props.title} description={this.props.description}/>\r\n      <div ref={this.canvasWrapper} style={{width: zoneSize * 9, margin: '0 auto', maxWidth: maxWidth}}>\r\n        <div ref={this.canvasScroll} className='canvas-scroll' style={{maxWidth: maxWidth, overflow: 'auto'}}>\r\n          <div \r\n            className='canvas' \r\n            style={{height: zoneSize * 3}}\r\n            data-allow-context-menu=\"true\"\r\n            ref={this.canvasElement}\r\n            onContextMenu={this.handleContextMenu}\r\n            onClick={this.handleClick}\r\n            onMouseDown={this.handleMouseDown}\r\n            onMouseUp={this.handleMouseUp}\r\n            onMouseMove={this.handleMouseMove}\r\n            >  \r\n            <ContextMenu \r\n              isOpen={this.state.isContextMenuOpen} \r\n              positionX={this.state.contextMenuPositionX} \r\n              positionY={this.state.contextMenuPositionY} \r\n              handleClickCreateNode={this.handleClickCreateNode}\r\n            />\r\n            <EdgeContextMenu\r\n              edgeId={this.state.edgeId}\r\n              isOpen={this.state.isEdgeMenuOpen}\r\n              positionX={this.state.edgeMenuPosition.x}\r\n              positionY={this.state.edgeMenuPosition.y}\r\n              onDelete={this.handleDeleteEdge}\r\n            />\r\n            {this.props.nodes.map((node) => (\r\n              <Node \r\n                key={node.id}\r\n                id={node.id}\r\n                title={node.data.title}\r\n                color={node.data.color}\r\n                position={node.position}\r\n                isContextMenuOpen={node.isContextMenuOpen}\r\n                handleDragStart={this.handleDragStart}\r\n                handleDrag={this.handleDrag}\r\n                handleDragEnd={this.handleDragEnd}\r\n                handleDeleteNode={this.handleDeleteNode}\r\n                handleUpdateTitle={this.handleUpdateTitle.bind(this)}\r\n                onColorChange={this.handleChangeColor}\r\n                setLastTouchedNode={this.setLastTouchedNode}\r\n                openEditStage={this.handleOpenEditStage}\r\n              />\r\n            ))}\r\n            {this.props.edges.map((edge) => (\r\n              <Edge \r\n                key={edge.id}\r\n                id={edge.id}\r\n                isShown={true}\r\n                width={1.1}\r\n                type={'curve'}\r\n\r\n                from={edge.from}\r\n                to={edge.to}\r\n              />\r\n            ))}\r\n            <Edge \r\n              className='demo-edge' \r\n              isShown={this.state.isEdgeCreating}\r\n              type={'curve'}\r\n              width={1.1}\r\n              from={this.state.demoEdgeFrom} \r\n              to={this.state.demoEdgeTo}\r\n            />\r\n          </div>\r\n          {\r\n            this.state.editStageId ? \r\n            <Modal>\r\n              <Modal.EditStage\r\n                id={this.state.editStageId}\r\n                title = 'Edit Stage'\r\n                okButtonName='Save'\r\n                onCancel={this.handleCloseEditStage}\r\n                onOk={this.handleSaveStageDescription}\r\n              />\r\n            </Modal> : null\r\n          } \r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as htmlToImage from 'html-to-image';\r\nimport Canvas from '../../canvas/Canvas.js';\r\nimport KeyStrokeHandler from  './KeyStrokeHandler.js';\r\nimport { createNode, deleteNode, setNestedKey } from '../../services/NodeService.js'\r\nimport { createEdge, deleteEdges, setUpdatedEdges } from '../../services/EdgeService.js';\r\nimport { processEntity } from '../../api/api.js';\r\nimport Loader from \"../ui/loader/Loader\";\r\nimport Comments from '../ui/comments/Comments.js';\r\n\r\nexport default class CanvasStateProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      canvasId: this.props.canvasId,\r\n      nodes: [],\r\n      edges: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    processEntity('GET', `/maps/${this.state.canvasId}`)\r\n      .then(response => response.json())\r\n      .then(canvas =>\r\n        this.setState({\r\n          canvas: canvas,\r\n          nodes: canvas.stages || [],\r\n          edges: canvas.connections || []\r\n        })\r\n      )\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.loading) return <Loader/>;\r\n\r\n    return (\r\n      <div style={{backgroundColor: '#f9fafb'}}>\r\n        <KeyStrokeHandler canvas={this.state.canvas} nodes={this.state.nodes} edges={this.state.edges} >\r\n          <Canvas\r\n            id={this.state.canvasId}\r\n            title={this.state?.canvas?.name}\r\n            description={this.state?.canvas?.description}\r\n            nodes={this.state.nodes}\r\n            edges={this.state.edges}\r\n            onNodeAdd={this.addNode.bind(this)}\r\n            onNodeDelete={this.deleteNode.bind(this)}\r\n            onNodeChange={this.updateNode.bind(this)}\r\n            onEdgeAdd={this.addEdge.bind(this)}\r\n            onEdgeDelete={this.deleteEdges.bind(this)}\r\n            onEdgeChange={this.updateEdges.bind(this)}\r\n          />\r\n        </KeyStrokeHandler>\r\n        <div style={{textAlign: 'center'}}>Metadata</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  mapToImage(mapElement) {\r\n    htmlToImage.toJpeg(mapElement, { quality: 0.01 })\r\n      .then(imageBlob => this.saveImage(imageBlob))\r\n      .catch(err => {\r\n        console.error('oops, something went wrong!', err);\r\n      });\r\n  }\r\n\r\n  saveImage(imageBlob) {\r\n    processEntity('PUT', `/maps/${this.state.canvasId}/img`, imageBlob, 'application/octet-stream')\r\n      .then(res => res.json())\r\n      .then(res => console.log(res))\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  addNode(position, canvas) {\r\n    const newNode = createNode(position);\r\n    \r\n    processEntity('POST', `/maps/${this.state.canvas.id}/stages`, [newNode])\r\n      .then(response => response.json())\r\n      .then(nodes => this.state.nodes.concat(nodes))\r\n      .then(nodes => this.setState({ nodes }))\r\n      .catch(error => console.log(error));\r\n\r\n    console.log(canvas);\r\n    this.mapToImage(canvas);\r\n  }\r\n\r\n  deleteNode(nodeId) {\r\n    processEntity('DELETE', `/maps/${this.state.canvas.id}/stages/${nodeId}`)\r\n      .then(responseOk => deleteNode(this.state.nodes, nodeId))\r\n      .then(notDeletedNodes => this.setState({ nodes: notDeletedNodes }))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  updateNode(nodeId, propertyName, value) {\r\n    const node = this.state.nodes.find(node => node.id === nodeId);\r\n\r\n    const pathToProperty = propertyName.split(\".\");\r\n    setNestedKey(node, pathToProperty, value);\r\n\r\n    processEntity('PUT', `/stages/${nodeId}`, node)\r\n      .then(response => response.json())\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  addEdge(from, to) {\r\n    const edge = createEdge(from, to);\r\n    \r\n    processEntity('POST', `/maps/${this.state.canvas.id}/connections`, [edge])\r\n      .then(response => response.json())\r\n      .then(edges => this.state.edges.concat(edges))\r\n      .then(edges => this.setState({ edges }))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteEdges(edgeIds) {\r\n    processEntity('DELETE', `/maps/${this.state.canvas.id}/connections?ids=` + edgeIds.join(','))\r\n      .then(responseOk => deleteEdges(this.state.edges, edgeIds))\r\n      .then(notDeletedEdges => this.setState({ edges: notDeletedEdges }))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  updateEdges(mapUpdatedEdges) {\r\n    setUpdatedEdges(this.state.edges, mapUpdatedEdges);\r\n\r\n    const updatedEdgesAsArray = Array.from(mapUpdatedEdges.values());\r\n    processEntity('PUT', `/maps/${this.state.canvas.id}/connections`, updatedEdgesAsArray)\r\n      .catch(error => console.log(error));\r\n  }\r\n}\r\n","/**\r\n * Returns: new node object with related position\r\n * \r\n * @param  {Object} position  position.x and position.y of node inside canvas\r\n * @return {Object}           new node object\r\n */\r\nexport function createNode(position) {\r\n  const temporaryRandomId = Math.floor(Math.random() * 10000).toString();\r\n  \r\n  const node = {\r\n    id: temporaryRandomId,\r\n    data: {\r\n      title: 'new_stage',\r\n      color: 'lightgrey'\r\n    },\r\n    position: {\r\n      x: position.x,\r\n      y: position.y\r\n    }\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\n/**\r\n * Returns: new node array without deleted node\r\n * \r\n * @param  {Array}  nodes\r\n * @param  {String} nodeId\r\n * @return {Array}  new array without deleted node\r\n */\r\nexport function deleteNode(nodes, nodeId) {\r\n  const nodeIndex = nodes.findIndex(node => node.id === nodeId);\r\n  \r\n  const nodeList = nodes.slice(0, nodeIndex);\r\n  nodeList.push(...nodes.slice(nodeIndex + 1, nodes.length));\r\n  \r\n  return nodeList;\r\n}\r\n\r\n/**\r\n * Sets a value of nested key string descriptor inside a Object.\r\n * It changes the passed object.\r\n * Ex:\r\n *    let obj = {a: {b:{c:'initial'}}}\r\n *    setNestedKey(obj, ['a', 'b', 'c'], 'changed-value')\r\n *    assert(obj === {a: {b:{c:'changed-value'}}})\r\n *\r\n * @param {[Object]} obj   Object to set the nested key\r\n * @param {[Array]}  path  An array to describe the path(Ex: ['a', 'b', 'c'])\r\n * @param {[Object]} value Any value\r\n */\r\nexport const setNestedKey = (obj, path, value) => {\r\n  if (path.length === 1) {\r\n    obj[path] = value\r\n    return\r\n  }\r\n  return setNestedKey(obj[path[0]], path.slice(1), value)\r\n}\r\n","/**\r\n * Returns: new edge object with from and to related positions\r\n * \r\n * @param  {Object} from \r\n * @param  {Object} to\r\n * @return {Object} return new edge object\r\n */\r\nexport function createEdge(from, to) {\r\n  const temporaryRandomId = Math.floor(Math.random() * 10000 + 1000).toString();\r\n\r\n  const newEdge = {\r\n    id: temporaryRandomId,\r\n    from: from,\r\n    to: to\r\n  }\r\n  \r\n  return newEdge;\r\n}\r\n\r\n/**\r\n * Delete edges from edges array which match ids\r\n * \r\n * @param  {Array}  edges   all edges\r\n * @param  {Array}  edgeIds edge ids to be deleted\r\n * @return {Array}  not deleted edges\r\n */\r\nexport function deleteEdges(edges, edgeIds) {\r\n  const notDeletedEdges = edges.filter(edge => \r\n    edgeIds.indexOf(edge.id) === -1);\r\n    \r\n  return notDeletedEdges;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Array} edges \r\n * @param {Map} mapUpdatedEdges [id, Edge]\r\n */\r\nexport function setUpdatedEdges(edges, mapUpdatedEdges) {  \r\n  edges.forEach(edge => {\r\n    const updatedEdge = mapUpdatedEdges.get(edge.id);\r\n    \r\n    if (updatedEdge) {\r\n      edge.from = updatedEdge.from;\r\n      edge.to = updatedEdge.to;\r\n    }\r\n  });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { setCookie, AUTH_TOKEN_NAME } from '../../../api/cookie';\r\n\r\nasync function handleResponse(response) {\r\n    if (response.ok) {\r\n      return await response.json();\r\n    }\r\n    const error = await response.json();\r\n    return await Promise.reject(error);\r\n}\r\n\r\nexport default function LoginForm() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    \r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n        const loginData = { email, password };\r\n        \r\n        await fetch('/auth/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(loginData)\r\n          })\r\n          .then(res => handleResponse(res))\r\n          .then(token => setCookie(AUTH_TOKEN_NAME, token, 1))\r\n          .then(() => window.location.href = '/')\r\n          .catch(err => setError(err.message))\r\n    }\r\n\r\n    const handleSignUp = () => {\r\n        window.location.href = '/registration';\r\n    }\r\n\r\n    return <div className=\"auth-block\">\r\n        <div className=\"login-left-content\">\r\n            <h2>Log in</h2>\r\n            <div className=\"auth-welcome-msg\">Welcome to Mapex, , please log in to start using this app</div>\r\n            <form className=\"auth-form\">\r\n                <div className=\"login-forms-fieldset\">\r\n                    <div className=\"auth-form-field\">\r\n                        <label>E-mail</label>\r\n                        <input type=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\r\n                    </div>\r\n                    <div className=\"auth-form-field\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"forgot-password\">Forgot password?</div>\r\n                <button className=\"auth-btn\" onClick={handleLogin}>Log in</button>\r\n                <div className=\"error-msg\">{ error }</div>\r\n            </form>\r\n            <div className=\"signup-link\">\r\n                Don't have an account? <span className=\"signup-btn\" onClick={handleSignUp}>Sign up</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport \"./Auth.css\";\r\nimport plan from './Plan2.png';\r\n\r\nexport default function AuthContent(props) {\r\n    return <div className=\"auth-content\">\r\n        <div>\r\n            <div>\r\n                <div className=\"promo-img-block\">\r\n                    <img className=\"promo-img\" src={plan} />\r\n                </div>\r\n            </div>\r\n            <div className=\"auth-content-footer\">\r\n                <h3 className=\"description-title\">Build a plan</h3>\r\n                <div className=\"description-text\">\r\n                    Build your path or take someone else's experience to achieve your goals\r\n                </div>\r\n                <div className=\"description-scroll\">\r\n                    <div className=\"prev\"></div>\r\n                    <div className=\"scroll-index\">⦿ ○ ○</div>\r\n                    <div className=\"next\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport AuthContent from \"./AuthContent\";\r\nimport './Auth.css';\r\n\r\n//center left and right content\r\nexport default function Login(props) {\r\n    return <div className=\"auth\">\r\n        <LoginForm />\r\n        <AuthContent />\r\n    </div>\r\n}","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRout(props) {\r\n    if (props.isAuthenticated) {\r\n        return props.children;\r\n    } else {\r\n        return <Redirect to='/login' />\r\n    }\r\n}","import React, { useState, useRef } from \"react\";\r\nimport './Auth.css';\r\nimport { setCookie, AUTH_TOKEN_NAME } from \"../../../api/cookie\";\r\n\r\nconst EMAIL_ERROR_MSG = 'Incorrect email';\r\nconst PASSWORD_ERROR_MSG = 'Password must be at least 8 characters long and contain uppercase and lowercase letters and numbers';\r\nconst PASSWORDS_MATCH_ERROR = 'Passwords do not match';\r\n\r\nasync function handleResponse(response) {\r\n    if (response.ok) {\r\n      return await response.json();\r\n    }\r\n    const error = await response.json();\r\n    return await Promise.reject(error);\r\n}\r\n\r\nexport default function RegistrationForm() {\r\n    const [email, setEmail] = useState('');\r\n    const emailRef = useRef(null);\r\n    const [password, setPassword] = useState('');\r\n    const passwordRef = useRef(null);\r\n    const [passwordMatch, setPasswordMatch] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleCreateAccount = async (e) => {\r\n        e.preventDefault();\r\n        const errorMsg = getValidationError();\r\n        if (errorMsg) {\r\n            setError(errorMsg);\r\n            return;\r\n        }\r\n\r\n        const registerationData = { email, password };\r\n        console.log(registerationData);\r\n        await fetch('/auth/registration', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(registerationData)\r\n          })\r\n          .then(res => handleResponse(res))\r\n          .then(token => setCookie(AUTH_TOKEN_NAME, token, 1))\r\n          .then(() => window.location.href = '/')\r\n          .catch(err => {\r\n            setError(err.message);\r\n            console.error(err.error);\r\n        })\r\n    }\r\n\r\n    const getValidationError = () => {\r\n        if (!emailRef.current.validity.valid) return EMAIL_ERROR_MSG;\r\n        if (!passwordRef.current.validity.valid) return PASSWORD_ERROR_MSG;\r\n        if (password !== passwordMatch) return PASSWORDS_MATCH_ERROR;\r\n        return null;\r\n    }\r\n\r\n    const handleSignIn = () => {\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-block\">\r\n            <div className=\"login-left-content\">\r\n                <h2>Create account</h2>\r\n                <div className=\"auth-welcome-msg\">Access guides by creating an account</div>\r\n                <form className=\"auth-form\">\r\n                    <div className=\"login-forms-fieldset\">\r\n                        <div className=\"auth-form-field \">\r\n                            <label>E-mail</label>\r\n                            <input type=\"email\" required ref={emailRef} \r\n                                                onChange={(e)=>setEmail(e.target.value)}\r\n                                                onFocus={()=>setError('')}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"auth-form-field\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" required ref={passwordRef} pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\r\n                                                   onFocus={()=>setError('')} \r\n                                                   onChange={(e)=>setPassword(e.target.value)}>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"auth-form-field\">\r\n                            <label>Repeat password</label>\r\n                            <input type=\"password\" required\r\n                                                   onFocus={()=>setError('')} \r\n                                                   onChange={(e)=>setPasswordMatch(e.target.value)}>\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"auth-btn\" onClick={handleCreateAccount}>Create account</button>\r\n                    <div className=\"error-msg\">{ error }</div>\r\n                </form>\r\n                <div className=\"signup-link\">\r\n                    Already have an account? <span className=\"signup-btn\" onClick={handleSignIn}>Sign in</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport AuthContent from \"./AuthContent\";\r\n\r\nexport default function Registration() {\r\n    return (\r\n        <div className=\"auth\">\r\n            <RegistrationForm />\r\n            <AuthContent />\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport './MapPinBig.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BoardPinMenu from \"../board-pin-menu/BoardPinMenu\";\r\nimport { processEntity } from '../../../api/api';\r\n\r\nexport default function MapPinBig(props) {\r\n  const {id: canvasId, title: canvasTitle, description: canvasDescription} = props;\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [title, setTitle] = useState(canvasTitle);\r\n  const [description, setDescription] = useState(canvasDescription);\r\n\r\n  const toggleMenu = (e) => {\r\n    setOpen(!open);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const closeMenu = () => setOpen(false);\r\n  const hideBoardPin = () => setDeleted(true);\r\n\r\n  const updateBoardPin = (name, description) => {\r\n    setTitle(name);\r\n    setDescription(description);\r\n  };\r\n\r\n  const redirectToBoard = () => {\r\n    history.push(`/map/${canvasId}/view`);\r\n  };\r\n\r\n  const mapImageRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    processEntity('GET', `/maps/${props.id}/img`)\r\n      .then(res => res.json())\r\n      .then(image => { mapImageRef.current.src = image })\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n      <div className='map-pin'\r\n        style={{display: deleted ? \"none\" : \"block\"}}\r\n        onClick={redirectToBoard}\r\n      >\r\n        <div className='map-pin__preview'\r\n          onMouseLeave={closeMenu}\r\n        >\r\n          <img className='map-pin__image' ref={mapImageRef} />\r\n          <div className=\"map-pin__description\">\r\n            {description}\r\n          </div>\r\n          <div className=\"map-pin__menu-btn\" onClick={toggleMenu} >\r\n            ...\r\n            <BoardPinMenu\r\n              isOpen={open}\r\n              canvasId={canvasId}\r\n              canvasTitle={title}\r\n              canvasDescription={description}\r\n              hideBoardPin={hideBoardPin}\r\n              updateBoardPin={updateBoardPin}\r\n            />\r\n          </div>\r\n          <div className='map-pin__overlay'></div>\r\n        </div>\r\n        <div className='board-pin__info'>\r\n          <div className=\"board-pin__info-title\" title={title}>\r\n            {title}\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MapPinBig from '../map-pin-big/MapPinBig';\r\nimport { processEntity } from '../../../api/api';\r\nimport './Suggestions.css';\r\nimport Loader from \"../loader/Loader\";\r\n\r\nexport default function Suggestions() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [boards, setBoards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    processEntity('GET', '/maps/all')\r\n        .then(response => response.json())\r\n        .then(boards => { \r\n          if (isMounted) setBoards(boards);\r\n        })\r\n        .catch(error => console.log(error))\r\n        .finally(() => setLoading(false));\r\n\r\n    return () => { isMounted = false };\r\n  }, []);\r\n\r\n  if (loading) return <Loader/>;\r\n\r\n  return(\r\n    <div className=\"suggestions-container\">\r\n\t\t\t<div className=\"suggestions\">\r\n\t\t\t\t{boards.map(board =>\r\n\t\t\t\t\t\t<MapPinBig\r\n\t\t\t\t\t\t\tkey={board.id}\r\n\t\t\t\t\t\t\tid={board.id}\r\n\t\t\t\t\t\t\ttitle={board.name}\r\n\t\t\t\t\t\t\tdescription={board.description}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nexport default function RouterParamsProvider(props) {\r\n\tconst { mapId } = useParams(); \r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{React.Children.map(props.children, child => {\r\n\t\t\t\treturn React.cloneElement(child, { canvasId: mapId })\r\n\t\t\t})}\r\n\t\t</>\r\n\t)\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Header from './components/ui/header/Header.js';\r\nimport ProfileHeader from './components/ui/profile-header/ProfileHeader.js';\r\nimport Dashboard from \"./components/ui/dashboard/Dashboard\";\r\nimport MapPassingStateProvider from './components/wrappers/MapPassingStateProvider';\r\nimport MapViewerStateProvider from './components/wrappers/MapViewerStateProvider';\r\nimport CanvasStateProvider from './components/wrappers/CanvasStateProvider';\r\nimport Login from \"./components/ui/auth/Login\";\r\nimport ProtectedRout from './components/wrappers/ProtectedRoute';\r\nimport Registration from './components/ui/auth/Registration';\r\nimport Suggestions from './components/ui/suggestions/Suggestions';\r\nimport { getCookie, AUTH_TOKEN_NAME } from './api/cookie';\r\nimport RouterParamsProvider from './components/wrappers/RouterParamsProvider';\r\n\r\n//TO DO: fix getCookie multipule invokation\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/login'>\r\n            <Login />\r\n          </Route>\r\n          <Route path='/registration'>\r\n            <Registration />\r\n          </Route>\r\n          <Route path=\"/library\">\r\n              <ProtectedRout isAuthenticated={getCookie(AUTH_TOKEN_NAME)}>\r\n                <Header />\r\n                <Dashboard />\r\n              </ProtectedRout>\r\n          </Route>\r\n          <Route path=\"/map/:mapId/view\">\r\n            <ProtectedRout isAuthenticated={getCookie(AUTH_TOKEN_NAME)}>\r\n              <Header />\r\n              <RouterParamsProvider>\r\n                <MapViewerStateProvider />\r\n              </RouterParamsProvider>\r\n            </ProtectedRout>\r\n          </Route>\r\n          <Route path=\"/map/:mapId/passing\">\r\n            <ProtectedRout isAuthenticated={getCookie(AUTH_TOKEN_NAME)}>\r\n              <Header />\r\n              <RouterParamsProvider >\r\n                <MapPassingStateProvider />\r\n              </RouterParamsProvider>\r\n            </ProtectedRout>\r\n          </Route>\r\n          <Route path=\"/map/:mapId/edit\">\r\n            <ProtectedRout isAuthenticated={getCookie(AUTH_TOKEN_NAME)}>\r\n              <Header />\r\n              <RouterParamsProvider>\r\n                <CanvasStateProvider />\r\n              </RouterParamsProvider>\r\n            </ProtectedRout>\r\n          </Route>\r\n          <Route path=\"/user/:userId\">\r\n            <ProtectedRout isAuthenticated={getCookie(AUTH_TOKEN_NAME)}>\r\n              <Header />\r\n              <ProfileHeader />\r\n              <Dashboard />\r\n            </ProtectedRout>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <ProtectedRout isAuthenticated={getCookie(AUTH_TOKEN_NAME)}>\r\n              <Header />\r\n              <Suggestions />\r\n            </ProtectedRout>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}